<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CHI1130</title>
  
  <subtitle>业精于勤，荒于嬉；行成于思，毁于随</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://github.com/chengheai/"/>
  <updated>2021-10-09T08:48:32.094Z</updated>
  <id>https://github.com/chengheai/</id>
  
  <author>
    <name>HEAI</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>深入理解js中防抖跟截流的区别</title>
    <link href="https://github.com/chengheai/2021/07/15/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3js%E4%B8%AD%E9%98%B2%E6%8A%96%E8%B7%9F%E6%88%AA%E6%B5%81%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>https://github.com/chengheai/2021/07/15/深入理解js中防抖跟截流的区别/</id>
    <published>2021-07-15T13:29:55.000Z</published>
    <updated>2021-10-09T08:48:32.094Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在日常项目开发中，通常会碰到监听处理的操作，比如监听浏览器窗口大小改变，监听滚动事件，监听输入事件等等，然而做这方面功能的时候就要想着怎么优化性能，防抖跟截流就派上用场了</p><h2 id="防抖"><a href="#防抖" class="headerlink" title="防抖"></a>防抖</h2><blockquote><p>触发高频事件后delay内函数只会执行一次，如果delay内高频事件再次被触发，则重新计算时间</p></blockquote><ol><li>实现方式：每次触发事件时设置一个延迟调用方法，并且取消之前的延时调用方法</li><li>缺点：如果事件在规定的时间间隔内被不断的触发，则调用方法会被不断的延迟</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//debounce</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">debounce</span>(<span class="params">method, delay</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> timer = <span class="literal">null</span></span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> self = <span class="keyword">this</span></span><br><span class="line">    <span class="keyword">if</span> (timer) &#123;</span><br><span class="line">      clearTimeout(timer)</span><br><span class="line">      timer = <span class="literal">null</span></span><br><span class="line">    &#125;</span><br><span class="line">    timer = setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      method.apply(self, <span class="built_in">arguments</span>)</span><br><span class="line">    &#125;, delay)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">handle</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(xxx);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 滚动事件</span></span><br><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">'scroll'</span>, debounce(handle,<span class="number">1000</span>));</span><br></pre></td></tr></table></figure><h1 id="节流"><a href="#节流" class="headerlink" title="节流"></a>节流</h1><blockquote><p>指在规定时间内只触发一次事件，减少事件执行的频率</p></blockquote><ol><li>实现方式：每次触发事件时，如果当前有等待执行的延时函数，则直接return</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">throttle</span>(<span class="params">fn,delay</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> canRun = <span class="literal">true</span></span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> self = <span class="keyword">this</span></span><br><span class="line">    <span class="keyword">if</span> (!canRun) <span class="keyword">return</span></span><br><span class="line">    canRun = <span class="literal">false</span></span><br><span class="line">    setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      fn.apply(self, <span class="built_in">arguments</span>)</span><br><span class="line">      canRun = <span class="literal">true</span></span><br><span class="line">    &#125;, delay)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="其他版本"><a href="#其他版本" class="headerlink" title="其他版本"></a>其他版本</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 时间戳</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">throttle1</span> (<span class="params">fn, delay</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> prev = <span class="built_in">Date</span>.now()</span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> now = <span class="built_in">Date</span>.now()</span><br><span class="line">    <span class="keyword">if</span> (now - prev &gt;= delay) &#123;</span><br><span class="line">      fn()</span><br><span class="line">      prev = <span class="built_in">Date</span>.now()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定时器</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">throttle2</span> (<span class="params">fn, delay</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> timer = <span class="literal">null</span></span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!timer) &#123;</span><br><span class="line">      timer = setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        fn()</span><br><span class="line">        timer = <span class="literal">null</span></span><br><span class="line">      &#125;, delay)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h1><p><a href="https://chengheai.github.io/daily-vue-demo/#/throttle" target="_blank" rel="noopener">throttle 截流</a><br><a href="https://chengheai.github.io/daily-vue-demo/#/debounce" target="_blank" rel="noopener">debounce 防抖</a></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>一般情况下onresize，onkeyup事件使用防抖；onscroll、onmousemove等事件使用截流。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在日常项目开发中，通常会碰到监听处理的操作，比如监听浏览器窗口大小改变，监听滚动事件，监听输入事件等等，然而做这方面功能的时候就要想着怎么优
      
    
    </summary>
    
    
      <category term="Javascript" scheme="https://github.com/chengheai/tags/Javascript/"/>
    
  </entry>
  
  <entry>
    <title>jenkins+docker+github+nginx前端实现自动化部署</title>
    <link href="https://github.com/chengheai/2020/07/06/jenkins-docker-github-nginx%E5%89%8D%E7%AB%AF%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/"/>
    <id>https://github.com/chengheai/2020/07/06/jenkins-docker-github-nginx前端实现自动化部署/</id>
    <published>2020-07-06T14:08:22.000Z</published>
    <updated>2021-10-09T08:48:32.070Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>由于之前写过react+nodejs+mongodb的项目，只是在本地开发完成，想尝试正常开发部署上线流出走一波，然而在网上搜索一番，大部分都是写的基础东西，标题大内容小，有的甚至写到关键位置就没了，当然也有些是好文章，下面是我总结一些问题，踩过坑之后的流程</p><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ul><li>虚拟机一台，市面上的有VirtualBox【mac】，VMware【windows】系统为linux，笔者为linux CentOS7.6<h2 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h2></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 看你当前的内核版本</span></span><br><span class="line">uname -r</span><br><span class="line"></span><br><span class="line"><span class="comment">// yum 包更新到最新</span></span><br><span class="line">yum update -y</span><br><span class="line"></span><br><span class="line"><span class="comment">// 安装 docker</span></span><br><span class="line">yum install docker</span><br><span class="line"></span><br><span class="line"><span class="comment">// 启动并加入开机启动</span></span><br><span class="line">systemctl start docker</span><br><span class="line">systemctl enable docker</span><br><span class="line"></span><br><span class="line"><span class="comment">// 下载docker-compose</span></span><br><span class="line">curl -L https:<span class="comment">//github.com/docker/compose/releases/download/1.23.2/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-compose</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加可执行权限(这里不懂可以看一下菜鸟教程-linux教程-文件权限)</span></span><br><span class="line">chmod +x /usr/local/bin/docker-compose</span><br><span class="line"><span class="comment">// 查看docker-compose版本</span></span><br><span class="line">docker-compose --version</span><br></pre></td></tr></table></figure><h2 id="Jenkins-安装与配置"><a href="#Jenkins-安装与配置" class="headerlink" title="Jenkins 安装与配置"></a>Jenkins 安装与配置</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker search jenkins</span><br></pre></td></tr></table></figure><p>选择第二个或者第三个，第一个有坑</p><h3 id="安装jenkins"><a href="#安装jenkins" class="headerlink" title="安装jenkins"></a>安装jenkins</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -u <span class="number">0</span> --privileged --name jenkins -p <span class="number">8888</span>:<span class="number">8080</span> -v /root/jenkins_home:<span class="regexp">/var/</span>jenkins_home jenkins/jenkins</span><br></pre></td></tr></table></figure><p>注意⚠️：本机需要在/root下创建一个jenkins_home文件夹【没有就加，有就要加】<br>其中:<br>-d 指的是在后台运行；<br>-u 0 指的是传入 root 账号 ID，覆盖容器中内置的账号；<br>-v /root/jenkins_home:/var/jenkins_home 指的是将 docker 容器内的目录 /var/jenkins_home 映射到宿主机 /root/jenkins_home 目录上；<br>–name jenkins 指的是将 docker 容器内的目录 /var/jenkins_home 映射到宿主机 /root/jenkins_home 目录上；<br>-p 49003:8080 指的是将容器的 8080 端口映射到宿主机的 8888 端口；<br>–privileged 指的是赋予最高权限。</p><p>整条命令的意思就是：<br>运行一个镜像为 jenkins/jenkins:latest 的容器，命名为 jenkins_home，使用 root 账号覆盖容器中的账号，赋予最高权限，将容器的 /var/jenkins_home 映射到宿主机的 /root/jenkins_home 目录下，映射容器中 8080 端口到宿主机 49003 端口</p><p>执行完成后，等待几十秒，等待 Jenkins 容器启动初始化。到浏览器中输入 <a href="http://your" target="_blank" rel="noopener">http://your</a> ip:49003 查看 Jenkins 是否启动成功</p><p>看到如下界面说明启动成功：</p><p>通过如下命令获取密码，复制到上图输入框中</p><p>进入到下个页面，选择【安装推荐的插件】。</p><p>由于墙的问题，需要修改 Jenkins 的默认下载地址。可以在浏览器另起一个 tab 页面，进入 <a href="http://your" target="_blank" rel="noopener">http://your</a> ip:49003/pluginManager/advanced，修改最下面的升级站点 URL 为 <a href="http://mirror.esuni.jp/jenkins/updates/update-center.json" target="_blank" rel="noopener">http://mirror.esuni.jp/jenkins/updates/update-center.json</a></p><p>然后重启容器，再次进入初始化页面，通常下载速度会加快。</p><p>然后就是创建管理员账号。</p><p>进入首页后，因为自动化部署中需要通过 ssh 登陆服务器执行命令以及 node 环境，所以需要下载 Publish Over SSH 和 NodeJS 插件，可通过系统管理 -&gt; 管理插件 -&gt; 可选插件进入，搜索选中并直接安装。如下图所示：</p><p>需要注意的是，Publish Over SSH 需要配置相关 ssh 服务器，通过系统管理 -&gt; 系统设置 进入并拉到最下面，输入 Name、Hostname、Username、Passphrase / Password 等参数。如下图所示：</p><p>然后点击 Test Configuration 校验能否登陆。</p><p>至此 Jenkins 已经完成了全局配置。</p><p>关联 Jenkins 和 Github<br>在 GitHub 创建一个项目，以本项目为例，在项目根目录下创建 nginx.conf 和 docker-compose.yml 文件</p><p>nginx.conf<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#user  nobody;</span></span><br><span class="line">worker_processes 1;</span><br><span class="line"></span><br><span class="line"><span class="comment">#error_log  logs/error.log;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  notice;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  info;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#pid        logs/nginx.pid;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">  worker_connections 1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">  include mime.types;</span><br><span class="line">  default_type application/octet-stream;</span><br><span class="line"></span><br><span class="line">  <span class="comment">#log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '</span></span><br><span class="line">  <span class="comment">#                  '$status $body_bytes_sent "$http_referer" '</span></span><br><span class="line">  <span class="comment">#                  '"$http_user_agent" "$http_x_forwarded_for"';</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#access_log  logs/access.log  main;</span></span><br><span class="line"></span><br><span class="line">  sendfile on;</span><br><span class="line">  <span class="comment">#tcp_nopush     on;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#keepalive_timeout  0;</span></span><br><span class="line">  keepalive_timeout 65;</span><br><span class="line"></span><br><span class="line">  <span class="comment">#gzip  on;</span></span><br><span class="line"></span><br><span class="line">  server &#123;</span><br><span class="line">    listen 10000;</span><br><span class="line">    server_name 192.168.56.101;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#charset koi8-r;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#access_log  logs/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">      index index.html index.htm;</span><br><span class="line">      root /usr/share/nginx/html;</span><br><span class="line">      <span class="comment"># 所有静态资源均指向 /index.html</span></span><br><span class="line">      try_files <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.html;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#error_page  404              /404.html;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># redirect server error pages to the static page /50x.html</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    error_page 500 502 503 504 /50x.html;</span><br><span class="line">    location = /50x.html &#123;</span><br><span class="line">      root  /usr/share/nginx/html;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># location /api &#123;</span></span><br><span class="line">    <span class="comment">#   proxy_pass http://server:port;</span></span><br><span class="line">    <span class="comment"># &#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># proxy the PHP scripts to Apache listening on 127.0.0.1:80</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">    <span class="comment">#    proxy_pass   http://127.0.0.1;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">    <span class="comment">#    root           html;</span></span><br><span class="line">    <span class="comment">#    fastcgi_pass   127.0.0.1:9000;</span></span><br><span class="line">    <span class="comment">#    fastcgi_index  index.php;</span></span><br><span class="line">    <span class="comment">#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span></span><br><span class="line">    <span class="comment">#    include        fastcgi_params;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># deny access to .htaccess files, if Apache's document root</span></span><br><span class="line">    <span class="comment"># concurs with nginx's one</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#location ~ /\.ht &#123;</span></span><br><span class="line">    <span class="comment">#    deny  all;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>docker-compose.yml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">'3'</span></span><br><span class="line">services:</span><br><span class="line">  ad-tpl-vue: <span class="comment">#项目name</span></span><br><span class="line">    container_name: <span class="string">'webhtml'</span> <span class="comment">#容器名称</span></span><br><span class="line">    image: nginx</span><br><span class="line">    restart: always</span><br><span class="line">    ports:</span><br><span class="line">      - 10000:10000</span><br><span class="line">    volumes:</span><br><span class="line">      - ./nginx.conf:/etc/nginx/nginx.conf <span class="comment">#挂载nginx配置</span></span><br><span class="line">      - ./dist:/usr/share/nginx/html/ <span class="comment">#挂载项目</span></span><br><span class="line">    privileged: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>这里需要解释下 volumes 参数，在打包 Docker 镜像时，如果将 nginx.conf 和 dist 直接拷贝到镜像中，那么每次修改相关文件时，都需要重新打包新的镜像。通过 volumes 可以将宿主机的某个文件映射到容器的某个文件，那么改动相关文件，就不要重新打包镜像了，只需修改宿主机上的文件即可。</p><p>然后在 Jenkins 创建一个新的任务，选择【构建一个自由风格的软件项目】，并设置相关配置，如下图所示。</p><p>其中第三张图两部分命令含义如下：</p><p>第一部分 shell 命令是 build 前端项目，会在项目根目录下生成 dist 目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$PATH</span></span><br><span class="line">node -v</span><br><span class="line">npm -v</span><br><span class="line">npm install</span><br><span class="line">npm run build</span><br></pre></td></tr></table></figure><p>第二部分 shell 命令就是通过 ssh 登陆服务器，通过 docker-compose 进行构建 docker 镜像并运行容器。相较于直接使用 docker ，当更新代码时无需执行停止删除容器，重新构建新的镜像等操作。<br>cd /root/jenkins_home/workspace/ad-tpl-vue \<br>&amp;&amp; docker-compose stop &amp;&amp; docker-compose up -d</p><p>最后可以回到该任务页，点击【立即构建】来构建我们的项目了。<br>实现自动触发打包<br>不过仍有个问题，那就是当向 GitHub 远程仓库 push 代码时，需要能够自动触发构建，相关操作如下。<br>1.修改 Jenkins 安全策略</p><p>通过系统管理 -&gt; 全局安全配置 进入，并如下图操作</p><p>2.生成 Jenkins API Token</p><p>通过用户列表 -&gt; 点击管理员用户 -&gt; 设置，点击添加新 token，然后复制身份验证令牌 token</p><p>3.在 Jenkins 项目对应任务的设置中配置【构建触发器】，将刚复制的 token 粘贴进去，如下图所示：</p><p>4.在 Github 相关项目中打开 Setting -&gt; Webhooks -&gt; Add webhooks，输入格式如下的 URL :<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 前面是 Jenkins 服务地址，ad-tpl-vue 指在 Jenkins 的任务名称，Token指上面获取的令牌</span></span><br><span class="line">http:<span class="comment">//12x.xxx.xxx.xxx:xxxx/job/ad-tpl-vue/build?token=Token</span></span><br></pre></td></tr></table></figure></p><p>这样，我们就实现了在 push 新的代码后，自动触发 Jenkins 打包项目代码，并打包 docker 镜像然后运行。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;由于之前写过react+nodejs+mongodb的项目，只是在本地开发完成，想尝试正常开发部署上线流出走一波，然而在网上搜索一番，大部分
      
    
    </summary>
    
    
      <category term="docker" scheme="https://github.com/chengheai/tags/docker/"/>
    
      <category term="nginx" scheme="https://github.com/chengheai/tags/nginx/"/>
    
      <category term="jenkins" scheme="https://github.com/chengheai/tags/jenkins/"/>
    
  </entry>
  
  <entry>
    <title>el-date-picker daterange设置上下7天选择区间</title>
    <link href="https://github.com/chengheai/2020/06/11/daterange%E8%AE%BE%E7%BD%AE%E4%B8%8A%E4%B8%8B7%E5%A4%A9%E9%80%89%E6%8B%A9%E5%8C%BA%E9%97%B4/"/>
    <id>https://github.com/chengheai/2020/06/11/daterange设置上下7天选择区间/</id>
    <published>2020-06-11T06:18:25.000Z</published>
    <updated>2021-10-09T08:48:32.064Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>时间选择区间想个不能超过 7 天</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">"搜索时间:"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-date-picker</span></span></span><br><span class="line"><span class="tag"><span class="attr">v-model</span>=<span class="string">"form.rangeDate"</span></span></span><br><span class="line"><span class="tag"><span class="attr">value-format</span>=<span class="string">"yyyy-MM-dd"</span></span></span><br><span class="line"><span class="tag"><span class="attr">type</span>=<span class="string">"daterange"</span></span></span><br><span class="line"><span class="tag"><span class="attr">:picker-options</span>=<span class="string">"pickerOptions"</span></span></span><br><span class="line"><span class="tag"><span class="attr">clearable</span></span></span><br><span class="line"><span class="tag">@<span class="attr">change</span>=<span class="string">"handleFormChange"</span></span></span><br><span class="line"><span class="tag">/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">data()&#123;</span><br><span class="line">  <span class="keyword">let</span> that = <span class="keyword">this</span> <span class="comment">// 关键</span></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    pickerOptions: &#123;</span><br><span class="line">      disabledDate(time) &#123;</span><br><span class="line">        <span class="keyword">let</span> timeOptionRange = that.timeOptionRange</span><br><span class="line">        <span class="keyword">let</span> secondNum = <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span> * <span class="number">7</span> * <span class="number">1000</span></span><br><span class="line">        <span class="keyword">if</span> (timeOptionRange) &#123;</span><br><span class="line">          <span class="keyword">return</span> time.getTime() &gt; timeOptionRange.getTime() + secondNum || time.getTime() &lt; timeOptionRange.getTime() - secondNum</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;, onPick(time) &#123;</span><br><span class="line">        <span class="comment">// 当第一时间选中才设置禁用</span></span><br><span class="line">        <span class="keyword">if</span> (time.minDate &amp;&amp; !time.maxDate) &#123;</span><br><span class="line">          that.timeOptionRange = time.minDate</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (time.maxDate) &#123;</span><br><span class="line">          that.timeOptionRange = <span class="literal">null</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;需求&quot;&gt;&lt;a href=&quot;#需求&quot; class=&quot;headerlink&quot; title=&quot;需求&quot;&gt;&lt;/a&gt;需求&lt;/h2&gt;&lt;p&gt;时间选择区间想个不能超过 7 天&lt;/p&gt;
&lt;h2 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
    
      <category term="element-ui" scheme="https://github.com/chengheai/tags/element-ui/"/>
    
  </entry>
  
  <entry>
    <title>解决vue中移动端ios键盘收起页面不归位问题</title>
    <link href="https://github.com/chengheai/2020/03/24/%E8%A7%A3%E5%86%B3vue%E4%B8%AD%E7%A7%BB%E5%8A%A8%E7%AB%AFios%E9%94%AE%E7%9B%98%E6%94%B6%E8%B5%B7%E9%A1%B5%E9%9D%A2%E4%B8%8D%E5%BD%92%E4%BD%8D%E9%97%AE%E9%A2%98/"/>
    <id>https://github.com/chengheai/2020/03/24/解决vue中移动端ios键盘收起页面不归位问题/</id>
    <published>2020-03-24T12:36:07.000Z</published>
    <updated>2021-10-09T08:48:32.097Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>网上找的例子<br>千篇一律～～～～～<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://github.com/chengheai/review-demo-image/blob/master/WX20200324-204643@2x.png?raw=true" alt title>                </div>                <div class="image-caption"></div>            </figure></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> @<span class="attr">focusout</span>=<span class="string">"inputBlur"</span> @<span class="attr">focusin</span>=<span class="string">"inputFocus"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"tel"</span> <span class="attr">placeholder</span>=<span class="string">"请输入手机号"</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">placeholder</span>=<span class="string">"请输入验证码"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line">    data() &#123;</span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">        timer: <span class="literal">null</span>,</span></span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">      inputBlur(e) &#123;</span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (e &amp;&amp; e.target &amp;&amp; e.target.tagName &amp;&amp; e.target.tagName.toLowerCase() === <span class="string">'input'</span>) &#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">this</span>.timer = setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">window</span>.scrollTo(<span class="number">0</span>, <span class="number">0</span>);</span></span><br><span class="line">          &#125;, 0);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      inputFocus(e) &#123;</span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (e &amp;&amp; e.target &amp;&amp; e.target.tagName &amp;&amp; e.target.tagName.toLowerCase() === <span class="string">'input'</span>) &#123;</span></span><br><span class="line"><span class="javascript">          clearTimeout(<span class="keyword">this</span>.timer);</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">"scss"</span> <span class="attr">scoped</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;网上找的例子&lt;br&gt;千篇一律～～～～～&lt;br&gt;&lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;
      
    
    </summary>
    
    
      <category term="vue" scheme="https://github.com/chengheai/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>el-time-picker自定义选择大于当前时间限制</title>
    <link href="https://github.com/chengheai/2020/03/11/el-time-picker%E8%87%AA%E5%AE%9A%E4%B9%89%E9%80%89%E6%8B%A9%E5%A4%A7%E4%BA%8E%E5%BD%93%E5%89%8D%E6%97%B6%E9%97%B4%E9%99%90%E5%88%B6/"/>
    <id>https://github.com/chengheai/2020/03/11/el-time-picker自定义选择大于当前时间限制/</id>
    <published>2020-03-11T13:02:59.000Z</published>
    <updated>2021-10-09T08:48:32.066Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>something think</p><h2 id="DEMO"><a href="#DEMO" class="headerlink" title="DEMO"></a>DEMO</h2><p><a href="https://chengheai.github.io/daily-vue-demo/#/date-picker" target="_blank" rel="noopener">在线 demo🎱🤓👀</a></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-form</span></span></span><br><span class="line"><span class="tag">    <span class="attr">:model</span>=<span class="string">"ruleForm"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">:rules</span>=<span class="string">"rules"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">ref</span>=<span class="string">"ruleForm"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">label-width</span>=<span class="string">"150px"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">class</span>=<span class="string">"demo-ruleForm"</span></span></span><br><span class="line"><span class="tag">  &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">"大于当前时间"</span> <span class="attr">prop</span>=<span class="string">"mytime"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-date-picker</span></span></span><br><span class="line"><span class="tag">        <span class="attr">type</span>=<span class="string">"datetime"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">placeholder</span>=<span class="string">"选择日期"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">value-format</span>=<span class="string">"timestamp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">:picker-options</span>=<span class="string">"pickerOptions"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">v-model</span>=<span class="string">"ruleForm.mytime"</span></span></span><br><span class="line"><span class="tag">      &gt;</span><span class="tag">&lt;/<span class="name">el-date-picker</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"primary"</span> @<span class="attr">click</span>=<span class="string">"submitForm('ruleForm')"</span>&gt;</span>立即创建<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">"resetForm('ruleForm')"</span>&gt;</span>重置<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">      <span class="keyword">var</span> validateTime = <span class="function">(<span class="params">rule, value, callback</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (value &lt;= <span class="built_in">Date</span>.now()) &#123;</span><br><span class="line">          callback(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'选择时间必须大于当前时间'</span>));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          callback();</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;;</span><br><span class="line">      <span class="keyword">return</span> &#123;</span><br><span class="line">        pickerOptions: &#123;</span><br><span class="line">          <span class="comment">// 限制收货时间不让选择今天以前的</span></span><br><span class="line">          disabledDate(time) &#123;</span><br><span class="line">            <span class="keyword">return</span> time.getTime() &lt; <span class="built_in">Date</span>.now() - <span class="number">8.64e7</span>;</span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        ruleForm: &#123;</span><br><span class="line">          mytime: <span class="string">''</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        rules: &#123;</span><br><span class="line">          mytime: [</span><br><span class="line">            &#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">'请选择时间'</span>, <span class="attr">trigger</span>: <span class="string">'change'</span> &#125;,</span><br><span class="line">            &#123; <span class="attr">validator</span>: validateTime, <span class="attr">trigger</span>: <span class="string">'blur'</span> &#125;,</span><br><span class="line">          ],</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">      submitForm(formName) &#123;</span><br><span class="line">        <span class="keyword">this</span>.$refs[formName].validate(<span class="function"><span class="params">valid</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (valid) &#123;</span><br><span class="line">            alert(<span class="string">'submit!'</span>);</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'error submit!!'</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;,</span><br><span class="line">      resetForm(formName) &#123;</span><br><span class="line">        <span class="keyword">this</span>.$refs[formName].resetFields();</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;something think&lt;/p&gt;
&lt;h2 id=&quot;DEMO&quot;&gt;&lt;a href=&quot;#DEMO&quot; class=&quot;headerlink&quot; t
      
    
    </summary>
    
    
      <category term="element-ui" scheme="https://github.com/chengheai/tags/element-ui/"/>
    
  </entry>
  
  <entry>
    <title>原生js实现redux中getState,subscribe,listener,dispatch函数</title>
    <link href="https://github.com/chengheai/2020/03/01/%E5%8E%9F%E7%94%9Fjs%E5%AE%9E%E7%8E%B0redux%E4%B8%ADgetState-subscribe-listener-dispatch%E5%87%BD%E6%95%B0/"/>
    <id>https://github.com/chengheai/2020/03/01/原生js实现redux中getState-subscribe-listener-dispatch函数/</id>
    <published>2020-03-01T12:05:52.000Z</published>
    <updated>2021-10-09T08:48:32.086Z</updated>
    
    <content type="html"><![CDATA[<h2 id="原生代码"><a href="#原生代码" class="headerlink" title="原生代码"></a>原生代码</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 原生js实现dispatch 函数 --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"title"</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"content"</span>&gt;</span>内容<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> render = <span class="function"><span class="keyword">function</span>(<span class="params">state</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">'title'</span>).innerHTML = state.title;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">'content'</span>).innerHTML = state.content;</span></span><br><span class="line">      &#125;;</span><br><span class="line"><span class="javascript">      <span class="comment">// 自定义一个dispatch过程</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> appReducer = <span class="function"><span class="keyword">function</span>(<span class="params">state, action</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 返回默认的state</span></span></span><br><span class="line">        if (!state) &#123;</span><br><span class="line"><span class="javascript">          <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">            title: <span class="string">'初始化title'</span>,</span></span><br><span class="line"><span class="javascript">            content: <span class="string">'初始化content'</span>,</span></span><br><span class="line">          &#125;;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="comment">//返回相应的state</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">switch</span> (action.type) &#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">case</span> <span class="string">'CHANGE_TITLE'</span>:</span></span><br><span class="line"><span class="javascript">            <span class="comment">// state修改</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line">              ...state,</span><br><span class="line">              title: action.newTitle,</span><br><span class="line">            &#125;;</span><br><span class="line"><span class="javascript">          <span class="keyword">default</span>:</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> state;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;;</span><br><span class="line"><span class="javascript">      <span class="comment">// 希望调用createStore就返回一个store</span></span></span><br><span class="line"><span class="javascript">      <span class="comment">// 纯函数 传入什么返回什么</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> createStore = <span class="function"><span class="keyword">function</span>(<span class="params">reducer</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> state = <span class="literal">null</span>;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 监听者们</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> listeners = [];</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> dispatch = <span class="function"><span class="keyword">function</span>(<span class="params">action</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="comment">//</span></span></span><br><span class="line"><span class="javascript">          state = reducer(state, action); <span class="comment">// reducer返回新的state</span></span></span><br><span class="line"><span class="javascript">          listeners.forEach(<span class="function"><span class="params">listener</span> =&gt;</span> listener());</span></span><br><span class="line">        &#125;;</span><br><span class="line">        dispatch(&#123;&#125;);</span><br><span class="line"><span class="javascript">        getState = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">return</span> state;</span></span><br><span class="line">        &#125;;</span><br><span class="line"><span class="javascript">        <span class="comment">// 订阅</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> subscribe = <span class="function"><span class="keyword">function</span>(<span class="params">listener</span>) </span>&#123;</span></span><br><span class="line">          listeners.push(listener);</span><br><span class="line">        &#125;;</span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> &#123;</span></span><br><span class="line">          subscribe,</span><br><span class="line">          dispatch,</span><br><span class="line">          getState,</span><br><span class="line">        &#125;;</span><br><span class="line">      &#125;;</span><br><span class="line"><span class="javascript">      <span class="comment">// store 包含subscribe,dispatch,getState</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> store = createStore(appReducer);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">      store.subscribe(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line">        render(store.getState());</span><br><span class="line">      &#125;);</span><br><span class="line"><span class="javascript">      store.subscribe(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(store.getState());</span></span><br><span class="line">      &#125;);</span><br><span class="line">      store.dispatch(&#123;</span><br><span class="line"><span class="javascript">        type: <span class="string">'CHANGE_TITLE'</span>,</span></span><br><span class="line"><span class="javascript">        newTitle: <span class="string">'this is new title'</span>,</span></span><br><span class="line">      &#125;);</span><br><span class="line">      render(store.getState());</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;原生代码&quot;&gt;&lt;a href=&quot;#原生代码&quot; class=&quot;headerlink&quot; title=&quot;原生代码&quot;&gt;&lt;/a&gt;原生代码&lt;/h2&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre
      
    
    </summary>
    
    
      <category term="redux" scheme="https://github.com/chengheai/tags/redux/"/>
    
  </entry>
  
  <entry>
    <title>js原生方法实现react开发模式与组件化包装</title>
    <link href="https://github.com/chengheai/2020/02/25/js%E5%8E%9F%E7%94%9F%E6%96%B9%E6%B3%95%E5%AE%9E%E7%8E%B0react%E5%BC%80%E5%8F%91%E6%A8%A1%E5%BC%8F%E4%B8%8E%E7%BB%84%E4%BB%B6%E5%8C%96%E5%8C%85%E8%A3%85/"/>
    <id>https://github.com/chengheai/2020/02/25/js原生方法实现react开发模式与组件化包装/</id>
    <published>2020-02-25T14:04:02.000Z</published>
    <updated>2021-10-09T08:48:32.072Z</updated>
    
    <content type="html"><![CDATA[<h2 id="react-原生开发模式"><a href="#react-原生开发模式" class="headerlink" title="react 原生开发模式"></a>react 原生开发模式</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 更加接近react的开发模式 --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> root = <span class="built_in">document</span>.getElementById(<span class="string">'root'</span>);</span></span><br><span class="line"><span class="javascript">      <span class="comment">// 状态</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> state = &#123;</span></span><br><span class="line"><span class="javascript">        like: <span class="literal">false</span>,</span></span><br><span class="line">      &#125;;</span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> setState = <span class="function"><span class="keyword">function</span>(<span class="params">newState</span>) </span>&#123;</span></span><br><span class="line">        state = &#123;</span><br><span class="line">          ...state,</span><br><span class="line">          ...newState,</span><br><span class="line">        &#125;;</span><br><span class="line">        render();</span><br><span class="line">      &#125;;</span><br><span class="line"><span class="javascript">      <span class="comment">// 渲染</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> render = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line">        root.innerHTML = `</span><br><span class="line"><span class="javascript">      &lt;button type=<span class="string">'button'</span> style=<span class="string">'color:$&#123;state.like ? '</span>red<span class="string">' : '</span>black<span class="string">'&#125;'</span> onclick=<span class="string">'handleClick()'</span>&gt;</span></span><br><span class="line"><span class="javascript">      $&#123;state.like ? <span class="string">'已赞'</span> : <span class="string">'喜欢'</span>&#125;</span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">      `;</span><br><span class="line">      &#125;;</span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> handleClick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line">        setState(&#123;</span><br><span class="line">          like: !state.like,</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;;</span><br><span class="line">      render();</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="组件化包装"><a href="#组件化包装" class="headerlink" title="组件化包装"></a>组件化包装</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 组件化包装 --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> root = <span class="built_in">document</span>.getElementById(<span class="string">'root'</span>);</span></span><br><span class="line"><span class="javascript">      <span class="comment">// 提取setState方法</span></span></span><br><span class="line"><span class="javascript">      <span class="class"><span class="keyword">class</span> <span class="title">Component</span> </span>&#123;</span></span><br><span class="line">        setState(newState) &#123;</span><br><span class="line"><span class="javascript">          <span class="keyword">this</span>.state = &#123;</span></span><br><span class="line">            ...this.state,</span><br><span class="line">            ...newState,</span><br><span class="line">          &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="javascript">      <span class="comment">// extends 继承组件Component的setState方法 + super()</span></span></span><br><span class="line"><span class="javascript">      <span class="class"><span class="keyword">class</span> <span class="title">Button</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">constructor</span>() &#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">super</span>();</span></span><br><span class="line"><span class="javascript">          <span class="keyword">this</span>.state = &#123;</span></span><br><span class="line"><span class="javascript">            like: <span class="literal">true</span>,</span></span><br><span class="line">          &#125;;</span><br><span class="line"><span class="javascript">          <span class="keyword">this</span>.render();</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="comment">// setState(newState) &#123;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//   this.state = &#123;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//     ...this.state,</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//     newState</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//   &#125;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//   this.render()</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// &#125;</span></span></span><br><span class="line">        render() &#123;</span><br><span class="line"><span class="javascript">          <span class="keyword">const</span> state = <span class="keyword">this</span>.state;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">return</span> <span class="string">`</span></span></span><br><span class="line"><span class="javascript">           &lt;button type=<span class="string">'button'</span> style=<span class="string">'color:$&#123;state.like ? '</span>red<span class="string">' : '</span>black<span class="string">'&#125;'</span>&gt;</span></span><br><span class="line"><span class="javascript">      $&#123;state.like ? <span class="string">'已赞'</span> : <span class="string">'喜欢'</span>&#125;</span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">        `;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="javascript">      <span class="comment">// extends 继承组件Component的setState方法 + super()</span></span></span><br><span class="line"><span class="javascript">      <span class="class"><span class="keyword">class</span> <span class="title">Title</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">constructor</span>() &#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">super</span>();</span></span><br><span class="line"><span class="javascript">          <span class="keyword">this</span>.state = &#123;</span></span><br><span class="line"><span class="javascript">            text: <span class="string">'这是一个标题'</span>,</span></span><br><span class="line">          &#125;;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="comment">// setState(newState) &#123;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//   this.state = &#123;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//     ...this.state,</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//     newState</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//   &#125;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// &#125;</span></span></span><br><span class="line">        render() &#123;</span><br><span class="line"><span class="javascript">          <span class="keyword">return</span> <span class="string">`&lt;h1&gt;<span class="subst">$&#123;<span class="keyword">this</span>.state.text&#125;</span>&lt;/h1&gt;`</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="javascript">      <span class="comment">// 组件复用</span></span></span><br><span class="line"><span class="javascript">      <span class="class"><span class="keyword">class</span> <span class="title">Wrap</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">constructor</span>() &#123;&#125;</span></span><br><span class="line">        render() &#123;</span><br><span class="line"><span class="javascript">          <span class="keyword">return</span> <span class="string">`Wrap <span class="subst">$&#123;<span class="keyword">new</span> Title().render()&#125;</span> <span class="subst">$&#123;<span class="keyword">new</span> Button().render()&#125;</span>`</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="javascript">      root.innerHTML = <span class="keyword">new</span> Wrap().render();</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;react-原生开发模式&quot;&gt;&lt;a href=&quot;#react-原生开发模式&quot; class=&quot;headerlink&quot; title=&quot;react 原生开发模式&quot;&gt;&lt;/a&gt;react 原生开发模式&lt;/h2&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;t
      
    
    </summary>
    
    
      <category term="react" scheme="https://github.com/chengheai/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>nodejs中常见的跨域处理</title>
    <link href="https://github.com/chengheai/2020/02/23/nodejs%E4%B8%AD%E5%B8%B8%E8%A7%81%E7%9A%84%E8%B7%A8%E5%9F%9F%E5%A4%84%E7%90%86/"/>
    <id>https://github.com/chengheai/2020/02/23/nodejs中常见的跨域处理/</id>
    <published>2020-02-23T13:29:53.000Z</published>
    <updated>2021-10-09T08:48:32.074Z</updated>
    
    <content type="html"><![CDATA[<h2 id="跨域问题"><a href="#跨域问题" class="headerlink" title="跨域问题"></a>跨域问题</h2><p>ajax 同源策略 协议 主机(ip,域名) 端口号</p><ol><li>协议，端口</li><li>cors</li><li>header 头文件信息</li><li>jsonp</li><li>服务器</li></ol><h2 id="解决-🧍‍♀️"><a href="#解决-🧍‍♀️" class="headerlink" title="解决 🧍‍♀️"></a>解决 🧍‍♀️</h2><blockquote><p>协议，端口</p></blockquote><p>将跨域的文件放入与服务器一样的文件下</p><blockquote><p>cors</p></blockquote><p>以 express 为例</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">const</span> cors = <span class="built_in">require</span>(<span class="string">'cors'</span>);</span><br><span class="line">...</span><br><span class="line">your codes...</span><br><span class="line">...</span><br><span class="line">app.use(cors());</span><br></pre></td></tr></table></figure><blockquote><p>header 头文件信息</p></blockquote><p>以 express 为例</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line">...</span><br><span class="line">your codes...</span><br><span class="line">...</span><br><span class="line">app.all(<span class="string">'*'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res, next</span>) </span>&#123;</span><br><span class="line">    res.header(<span class="string">"Access-Control-Allow-Origin"</span>, <span class="string">"*"</span>);</span><br><span class="line">    res.header(<span class="string">"Access-Control-Allow-Headers"</span>, <span class="string">"X-Requested-With,Content-Type"</span>);</span><br><span class="line">    res.header(<span class="string">"Access-Control-Allow-Methods"</span>,<span class="string">"PUT,POST,GET,DELETE,OPTIONS"</span>);</span><br><span class="line">    next();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><blockquote><p>jsonp</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">JSONP.getJSON(<span class="string">'http://api.com'</span>, data, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(data);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><blockquote><p>服务器</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">const</span> request = <span class="built_in">require</span>(<span class="string">'request'</span>);</span><br><span class="line">...</span><br><span class="line">your codes...</span><br><span class="line">...</span><br><span class="line"><span class="comment">// 本地api接口</span></span><br><span class="line">app.get(<span class="string">'/cors'</span>, (req, res) =&gt; &#123;</span><br><span class="line">  <span class="comment">// 发送一个服务器请求</span></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'cors.html的ajax'</span>);</span><br><span class="line">  <span class="comment">// 目标服务器，你想请求的服务器api</span></span><br><span class="line">  request(<span class="string">'http://www.google.com/xx/api/v1'</span>, (err, response, body) =&gt; &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(body);</span><br><span class="line">    <span class="keyword">if</span> (!err) &#123;</span><br><span class="line">      res.send(body);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(err);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;跨域问题&quot;&gt;&lt;a href=&quot;#跨域问题&quot; class=&quot;headerlink&quot; title=&quot;跨域问题&quot;&gt;&lt;/a&gt;跨域问题&lt;/h2&gt;&lt;p&gt;ajax 同源策略 协议 主机(ip,域名) 端口号&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;协议，端口&lt;/li&gt;
&lt;li&gt;cors&lt;/l
      
    
    </summary>
    
    
      <category term="nodejs" scheme="https://github.com/chengheai/tags/nodejs/"/>
    
      <category term="跨域" scheme="https://github.com/chengheai/tags/%E8%B7%A8%E5%9F%9F/"/>
    
  </entry>
  
  <entry>
    <title>小程序中优雅的获取手机号</title>
    <link href="https://github.com/chengheai/2020/01/08/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E4%BC%98%E9%9B%85%E7%9A%84%E8%8E%B7%E5%8F%96%E6%89%8B%E6%9C%BA%E5%8F%B7/"/>
    <id>https://github.com/chengheai/2020/01/08/小程序中优雅的获取手机号/</id>
    <published>2020-01-08T13:33:09.000Z</published>
    <updated>2021-10-09T08:48:32.088Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近在写小程序项目，有个获取手机号功能，网上荡了一下，虽不说是代码问题，有些文章都是残缺不全的，说到容易错误的区域又并未使用代码避免，说而不做的问题，索性自己结合网上的文章及官网文档写了一套完整的代码，完全开箱即用 🏄🏻‍♂️🏮🎹🐸</p><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://github.com/chengheai/review-demo-image/blob/master/WX20200108-214825@2x.png?raw=true" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Page Object</span></span><br><span class="line">Page(&#123;</span><br><span class="line">  data: &#123;&#125;,</span><br><span class="line">  getPhoneNumber: <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> that = <span class="keyword">this</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'e'</span>, e);</span><br><span class="line">    <span class="comment">//-----------------是否授权，授权通过进入主页面，授权拒绝则停留在登录界面</span></span><br><span class="line">    <span class="keyword">if</span> (e.detail.errMsg == <span class="string">'getPhoneNumber:fail user deny'</span>) &#123;</span><br><span class="line">      <span class="comment">//用户点击拒绝</span></span><br><span class="line">      wx.showModal(&#123;</span><br><span class="line">        content: <span class="string">'请输入手机号'</span>,</span><br><span class="line">        showCancel: <span class="literal">false</span>,</span><br><span class="line">        success(res) &#123;</span><br><span class="line">          <span class="keyword">if</span> (res.confirm) &#123;</span><br><span class="line">            <span class="comment">// your code ...</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> phoneQuery = &#123;</span><br><span class="line">        encryptedData: e.detail.encryptedData,</span><br><span class="line">        iv: e.detail.iv,</span><br><span class="line">        <span class="comment">// other params...</span></span><br><span class="line">        openid: wx.getStorageSync(<span class="string">'openid'</span>),</span><br><span class="line">      &#125;;</span><br><span class="line">      <span class="comment">// 检查是session_key否过期</span></span><br><span class="line">      wx.checkSession(&#123;</span><br><span class="line">        success() &#123;</span><br><span class="line">          <span class="comment">//session_key 未过期，并且在本生命周期一直有效</span></span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">'session_key 未过期，并且在本生命周期一直有效'</span>);</span><br><span class="line">          wx.request(&#123;</span><br><span class="line">            url: <span class="string">'https://xxx.com/api/v1/xx'</span>,</span><br><span class="line">            method: <span class="string">'POST'</span>,</span><br><span class="line">            data: phoneQuery,</span><br><span class="line">            success: <span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line">              <span class="comment">// your code...</span></span><br><span class="line">            &#125;,</span><br><span class="line">            fail: <span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123;</span><br><span class="line">              <span class="comment">// your code...</span></span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;,</span><br><span class="line">        fail() &#123;</span><br><span class="line">          that.myLogin();</span><br><span class="line">          <span class="comment">// session_key 已经失效，需要重新执行登录流程</span></span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// login</span></span><br><span class="line">  myLogin() &#123;</span><br><span class="line">    wx.login(&#123;</span><br><span class="line">      success: <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">//用code传给服务器调换session_key</span></span><br><span class="line">        <span class="keyword">let</span> query = &#123;</span><br><span class="line">          code: res.code,</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">// my_login为wx.request(&#123;&#125;)封装</span></span><br><span class="line">        my_login(query).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="comment">// other code...</span></span><br><span class="line">          wx.setStorageSync(<span class="string">'unionid'</span>, unionid);</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//options(Object)</span></span><br><span class="line">  onLoad: <span class="function"><span class="keyword">function</span>(<span class="params">options</span>) </span>&#123;&#125;,</span><br><span class="line">  onReady: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;,</span><br><span class="line">  onShow: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;,</span><br><span class="line">  onHide: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;,</span><br><span class="line">  onUnload: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;,</span><br><span class="line">  onPullDownRefresh: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;,</span><br><span class="line">  onReachBottom: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;,</span><br><span class="line">  onShareAppMessage: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;,</span><br><span class="line">  onPageScroll: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;,</span><br><span class="line">  <span class="comment">//item(index,pagePath,text)</span></span><br><span class="line">  onTabItemTap: <span class="function"><span class="keyword">function</span>(<span class="params">item</span>) </span>&#123;&#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近在写小程序项目，有个获取手机号功能，网上荡了一下，虽不说是代码问题，有些文章都是残缺不全的，说到容易错误的区域又并未使用代码避免，说而不
      
    
    </summary>
    
    
      <category term="小程序" scheme="https://github.com/chengheai/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>怎么使用docker运行nuxt项目</title>
    <link href="https://github.com/chengheai/2020/01/07/%E6%80%8E%E4%B9%88%E4%BD%BF%E7%94%A8docker%E8%BF%90%E8%A1%8Cnuxt%E9%A1%B9%E7%9B%AE/"/>
    <id>https://github.com/chengheai/2020/01/07/怎么使用docker运行nuxt项目/</id>
    <published>2020-01-07T13:18:36.000Z</published>
    <updated>2021-10-09T08:48:32.091Z</updated>
    
    <content type="html"><![CDATA[<h2 id="个人日常-DEMO"><a href="#个人日常-DEMO" class="headerlink" title="个人日常 DEMO"></a>个人日常 DEMO</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@github.com:chengheai/ssr-project.git</span><br></pre></td></tr></table></figure><h2 id="添加-Dockerfile"><a href="#添加-Dockerfile" class="headerlink" title="添加 Dockerfile"></a>添加 Dockerfile</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">touch Dockerfile</span><br><span class="line">vi Dockerfile</span><br><span class="line">FROM node:<span class="number">8.11</span><span class="number">.0</span></span><br><span class="line"></span><br><span class="line">WORKDIR /opt</span><br><span class="line">ADD node_modules /opt/node_modules</span><br><span class="line">ADD server /opt/server</span><br><span class="line">ADD .nuxt /opt/.nuxt</span><br><span class="line">ADD <span class="keyword">static</span> /opt/<span class="keyword">static</span></span><br><span class="line">ADD nuxt.config.js /opt</span><br><span class="line">ADD package.json /opt</span><br><span class="line">EXPOSE <span class="number">3000</span></span><br><span class="line">CMD [<span class="string">"npm"</span>, <span class="string">"run"</span>, <span class="string">"start"</span>]</span><br></pre></td></tr></table></figure><p>~FROM node:8.11.0：该 image 文件继承官方的 node image，冒号表示标签，这里标签是 8.11.0，即 8.11.0 版本的 node。<br>~ADD . /opt：将当前目录文件下的所有文件（除了.dockerignore 排除的路径），都拷贝进入 image 文件的/opt 目录。<br>~WORKDIR /opt：指定接下来的工作路径为/opt。<br>~RUN npm install 或者 ADD node_modules：在/opt 目录下，运行 npm install 命令安装依赖。注意，安装后所有的依赖，都将打包进入 image 文件。<br>~EXPOSE 3000: 3000 端口暴露出来， 允许外部连接这个端口。</p><h2 id="添加-dockerignore"><a href="#添加-dockerignore" class="headerlink" title="添加.dockerignore"></a>添加.dockerignore</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">touch .dockerignore</span><br><span class="line">vi .dockerignore</span><br><span class="line">  .git</span><br><span class="line">  <span class="comment"># node_modules</span></span><br><span class="line">  npm-debug.log</span><br></pre></td></tr></table></figure><h2 id="build"><a href="#build" class="headerlink" title="build"></a>build</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker image build -t ssr-project.</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">docker image build -t ssr-project:0.0.1 .</span><br><span class="line"><span class="comment"># 最后面的空格和点不要漏</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://github.com/chengheai/review-demo-image/blob/master/WechatIMG370.png?raw=true" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="start"><a href="#start" class="headerlink" title="start"></a>start</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -d --name ssr-server -p 3000:3000 <span class="built_in">test</span>-ssr</span><br><span class="line">ssr-server: 容器名称</span><br><span class="line"><span class="built_in">test</span>-ssr: 镜像</span><br><span class="line">关闭</span><br><span class="line">$ docker stop ssr-server</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">okcer image ls // 查看 image</span><br><span class="line">docker image build -t ssr-project.  // 常见image</span><br><span class="line">docker rmi [containerID] // 删除指定镜像</span><br><span class="line">docker run -it --rm -p 3000:3000 ssr-project // docker container run命令会从 image 文件生成容器。--rm参数，在容器终止运行后自动删除容器文件</span><br><span class="line">docker ps // 列出本机正在运行的容器</span><br><span class="line">docker ps -a  // 列出本机所有容器，包括终止运行的容器</span><br><span class="line">docker container ls // 列出本机正在运行的容器</span><br><span class="line">docker container ls --all // 列出本机所有容器，包括终止运行的容器</span><br><span class="line">docker container rm [containerID] // 删除指定容器</span><br><span class="line">docker container <span class="built_in">kill</span> [containerID] // 终止容器运行，相当于向容器里面的主进程发出 SIGKILL 信号</span><br><span class="line">docker container stop [containerID] // 终止容器运行，相当于向容器里面的主进程发出 SIGTERM 信号，然后过一段时间再发出 SIGKILL 信号</span><br><span class="line">docker container start [containerID] // 启动已经生成、已经停止运行的容器</span><br><span class="line">docker container logs [containerID] // 用来查看 docker 容器的输出，即容器里面 Shell 的标准输出</span><br><span class="line">docker container <span class="built_in">exec</span> -it [containerID] /bin/bash // 用于进入一个正在运行的 docker 容器 进入容器就可以在容器的 Shell 执行命令了</span><br><span class="line">docker container cp [containID]:[/path/to/file] . // 用于从正在运行的 Docker 容器里面，将文件拷贝到本机</span><br></pre></td></tr></table></figure><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><p><a href="https://www.cnblogs.com/DeepInThought/p/10896790.html" target="_blank" rel="noopener">docker 常用指令说明</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;个人日常-DEMO&quot;&gt;&lt;a href=&quot;#个人日常-DEMO&quot; class=&quot;headerlink&quot; title=&quot;个人日常 DEMO&quot;&gt;&lt;/a&gt;个人日常 DEMO&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td
      
    
    </summary>
    
    
      <category term="docker" scheme="https://github.com/chengheai/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>一个优秀的Stack Engineer该有的姿态</title>
    <link href="https://github.com/chengheai/2019/12/06/Engineer%E8%AF%A5%E6%9C%89%E7%9A%84%E5%A7%BF%E6%80%81/"/>
    <id>https://github.com/chengheai/2019/12/06/Engineer该有的姿态/</id>
    <published>2019-12-06T13:40:51.000Z</published>
    <updated>2021-10-09T08:48:32.056Z</updated>
    
    <content type="html"><![CDATA[<p>程序员,一个在外人看来是高薪、前途无量的工作,但又有多少人清楚,有多少程序员是用自己的身心健康换来的这一看似华丽的褒赞。好吧,生活总是继续向前的,有问题就要积极地去解决,更何况是关乎自身的身心健康问题,如果一味的抱怨只会将自己推向另一个深渊。<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://github.com/chengheai/review-demo-image/blob/master/17360129.jpg?raw=true" alt title>                </div>                <div class="image-caption"></div>            </figure><br>以下建议,大家可以参考一下:</p><p>1、要学会走开</p><p>一般来说程序员大多有定力、做事有条理。我们不愿意承认失败,当不顺时我们也不愿走开。但当你已在一个问题上花费了太长时间的时候,最好的选择是走开,清醒头脑。出去走两步看看风景呼吸新鲜空气,等你平静下来(不再急躁)再回到办公桌上,效率会事半功倍。</p><p>2、在家少编程</p><p>工作一天了,回到家,继续打开电脑开启 eclipse 进行编程,我想这是很多程序员都喜欢干的事情。但是我的建议是,既然回家了,那就把代码放一边,做做饭,做做家务 ,然后看会电视,最好阅读点书籍。至于代码,可以等到明天。</p><p>3、少叫外卖,中午出去吃</p><p>很多程序员中午习惯叫外卖,别人都去吃饭了,他还在那里继续编码,直至外卖送来,然后在电脑面前完成这顿仓促的午餐,这是一件多么悲催的事情。我的建议是,中午出去吃,但要吃的健康,KFC 和麦当劳就不要了,你的健康本来就比人差了,再吃这个就说不过去了。</p><p>4、非技术的兴趣爱好</p><p>你不能只对电脑、对代码感兴趣,我们是一个社会人,应该具备社会人所应有的社交活动。你的兴趣要广泛,看书、看电影、喝茶、唱歌等,如果能有几项自己喜欢的体育锻炼项目,那就更完美了。程序员要有健康的生活方式,代码只是你生活中很小的一面而已。</p><p>5、休假</p><p>当工作上的一切都变得很不顺的时候,不要担心使用你的假期——它将使你彻底远离无法承受的工作。你不必去国外度假也不必旅行,如果你愿意待在家里也没关系。休假的关键是不工作。</p><p>6、学会借力</p><p>在专业的平台上找你需要的 SDK 或 API,而不是直接百度,例如 devstore,测评和对比做的都是很到位的,这些东西都可以根据自己的需求运用到自己的项目里,这样会节省你很多时间。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;程序员,一个在外人看来是高薪、前途无量的工作,但又有多少人清楚,有多少程序员是用自己的身心健康换来的这一看似华丽的褒赞。好吧,生活总是继续向前的,有问题就要积极地去解决,更何况是关乎自身的身心健康问题,如果一味的抱怨只会将自己推向另一个深渊。&lt;br&gt;&lt;figure clas
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>解决iOS12及一下弹框滚动会带动body内容滑动</title>
    <link href="https://github.com/chengheai/2019/11/20/%E8%A7%A3%E5%86%B3iOS12%E5%8F%8A%E4%B8%80%E4%B8%8B%E5%BC%B9%E6%A1%86%E6%BB%9A%E5%8A%A8%E4%BC%9A%E5%B8%A6%E5%8A%A8body%E5%86%85%E5%AE%B9%E6%BB%91%E5%8A%A8/"/>
    <id>https://github.com/chengheai/2019/11/20/解决iOS12及一下弹框滚动会带动body内容滑动/</id>
    <published>2019-11-20T13:32:55.000Z</published>
    <updated>2021-10-09T08:48:32.096Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在移动项目开发中往往会写一些 H5 页面，一个项目可能只有一两个页面，引入其他 UI 组件项目显得太臃肿，也没有啥必要，毕竟那些组件都是被人写的，有的时候不能一味的去使用他人写好的代码，有时间也需要自己谢谢，锻炼自己的同时也在巩固一些基础知识～～</p><h2 id="插件【-NPM-】"><a href="#插件【-NPM-】" class="headerlink" title="插件【 NPM 】"></a>插件【 NPM 】</h2><p><a href="https://github.com/phegman/v-scroll-lock">v-scroll-lock</a><br>这个插件虽然很好，但是在华为手机 📱 上却不起作用，而且还有不好的效果【亲测 🍄🐷🐸🦋】<br><a href="https://v-scroll-lock.peterhegman.com/" target="_blank" rel="noopener">【在线测试】</a></p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>一个页面弹出一个框，框里的内容可以滚动，但是滚动弹框时，body 内容也在动 【前提是你的 body 超过屏幕的高度】，然而在 iOS13 ，安卓手机没有问题，但是在 iOS12 及以下就会出现这个问题，通过代码 <code>document.body.style.overflow = &quot;hidden&quot;;</code>，并不管用，原因是：在苹果 🧬 手机上就不存在这个属性，在它看来，我的页面有内容就该给客户全部展示出来，为什么要 hidden 呢 🍌，这个方法行不通时，我们准备给它添加另外一个属性<code>document.body.style.position = &quot;fixed&quot;;</code>,发现可以正常，但是感觉怪怪的，因为 fixed 的 top 为 0</p><h2 id="问题总结"><a href="#问题总结" class="headerlink" title="问题总结"></a>问题总结</h2><p>～弹窗时给 body 设置 overflow:hidden；（ios 不理你）<br>～弹窗时给 body 设置 position:fixed；(滚动位置会丢失)</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">watch: &#123;</span><br><span class="line">  dialogStatus: <span class="function"><span class="keyword">function</span>(<span class="params">news, olds</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (news) &#123;</span><br><span class="line">        <span class="built_in">document</span>.body.style.overflow = <span class="string">"hidden"</span>;</span><br><span class="line">        <span class="keyword">let</span> scrollTop =</span><br><span class="line">          <span class="built_in">document</span>.body.scrollTop || <span class="built_in">document</span>.documentElement.scrollTop;</span><br><span class="line">        <span class="built_in">document</span>.body.style.cssText +=</span><br><span class="line">          <span class="string">"position:fixed;width:100%;top:-"</span> + scrollTop + <span class="string">"px;"</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">document</span>.body.style.overflow = <span class="string">""</span>;</span><br><span class="line">        <span class="built_in">document</span>.body.style.position = <span class="string">"static"</span>;</span><br><span class="line">        <span class="keyword">let</span> top = <span class="built_in">document</span>.body.style.top;</span><br><span class="line">        <span class="built_in">document</span>.body.scrollTop = <span class="built_in">document</span>.documentElement.scrollTop = -<span class="built_in">parseInt</span>(</span><br><span class="line">          top</span><br><span class="line">        );</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在移动项目开发中往往会写一些 H5 页面，一个项目可能只有一两个页面，引入其他 UI 组件项目显得太臃肿，也没有啥必要，毕竟那些组件都是被人
      
    
    </summary>
    
    
      <category term="小技巧" scheme="https://github.com/chengheai/tags/%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>vue中实现图片上传添加自定义水印并下载</title>
    <link href="https://github.com/chengheai/2019/11/20/vue%E4%B8%AD%E5%AE%9E%E7%8E%B0%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89%E6%B0%B4%E5%8D%B0%E5%B9%B6%E4%B8%8B%E8%BD%BD/"/>
    <id>https://github.com/chengheai/2019/11/20/vue中实现图片上传添加自定义水印并下载/</id>
    <published>2019-11-20T13:27:28.000Z</published>
    <updated>2021-10-09T08:48:32.080Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近看了一篇用 Angular4+ 写的添加水印功能，觉得挺好玩，就自己试着用 vue 写一个相同功能</p><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://github.com/chengheai/review-demo-image/blob/master/2019-11-20%2022-47-46.2019-11-20%2022_57_10.gif?raw=true" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="LIVE"><a href="#LIVE" class="headerlink" title="LIVE"></a>LIVE</h2><p><a href="https://chengheai.github.io/daily-vue-demo/#/watermark" target="_blank" rel="noopener">☀️🇱🇷🏮 在线例子 🌰🌪☃️❄️</a></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><a href="https://github.com/chengheai/daily-vue-demo/blob/master/src/components/Watermark.vue">✈️✈️✈️✈️✈️✈️ 直达完整代码 🚅✈️🛫🛬🛸🚀</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrap"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"optea"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"file-upload"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>选择图片<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">style</span>=<span class="string">"color: #c00;"</span></span></span><br><span class="line"><span class="tag">        &gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"uploads"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"el-icon-upload2"</span> <span class="attr">style</span>=<span class="string">"margin-right: 5px;"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">          选择需要添加水印的图片<span class="tag">&lt;/<span class="name">label</span></span></span><br><span class="line"><span class="tag">        &gt;</span><span class="tag">&lt;/<span class="name">el-button</span></span></span><br><span class="line"><span class="tag">      &gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">        <span class="attr">type</span>=<span class="string">"file"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">id</span>=<span class="string">"uploads"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">hidden</span></span></span><br><span class="line"><span class="tag">        <span class="attr">accept</span>=<span class="string">"image/png, image/jpeg, image/gif, image/jpg"</span></span></span><br><span class="line"><span class="tag">        @<span class="attr">change</span>=<span class="string">"uploadImg($event, 1)"</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>水印文字<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">"watermarkOptions.text"</span> <span class="attr">placeholder</span>=<span class="string">"请输入水印内容"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>字体颜色<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-color-picker</span> <span class="attr">v-model</span>=<span class="string">"watermarkOptions.color"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-color-picker</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>旋转角度<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-slider</span> <span class="attr">v-model</span>=<span class="string">"watermarkOptions.rotate"</span> <span class="attr">:min</span>=<span class="string">"0"</span> <span class="attr">:max</span>=<span class="string">"360"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-slider</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>透明度<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-slider</span> <span class="attr">v-model</span>=<span class="string">"watermarkOptions.alpha"</span> <span class="attr">:min</span>=<span class="string">"0"</span> <span class="attr">:max</span>=<span class="string">"100"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-slider</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>文本间距<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-slider</span> <span class="attr">v-model</span>=<span class="string">"watermarkOptions.width"</span> <span class="attr">:min</span>=<span class="string">"0"</span> <span class="attr">:max</span>=<span class="string">"100"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-slider</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>字体大小<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-slider</span> <span class="attr">v-model</span>=<span class="string">"watermarkOptions.fontSize"</span> <span class="attr">:min</span>=<span class="string">"0"</span> <span class="attr">:step</span>=<span class="string">"0.5"</span> <span class="attr">:max</span>=<span class="string">"50"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-slider</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">"handleDown"</span> <span class="attr">class</span>=<span class="string">"download-btn"</span> <span class="attr">type</span>=<span class="string">"primary"</span> <span class="attr">plain</span> <span class="attr">icon</span>=<span class="string">"el-icon-download"</span></span></span><br><span class="line"><span class="tag">      &gt;</span>下载水印图片<span class="tag">&lt;/<span class="name">el-button</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"preview"</span> <span class="attr">ref</span>=<span class="string">"previewImg"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">"preImg || defaultimg"</span> <span class="attr">alt</span>=<span class="string">""</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"watermark"</span> <span class="attr">:style</span>=<span class="string">"&#123; background: paint &#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      defaultimg,</span><br><span class="line">      preImg: <span class="string">''</span>,</span><br><span class="line">      watermarkOptions: &#123;</span><br><span class="line">        text: <span class="string">'仅供 xxx 验证使用'</span>,</span><br><span class="line">        fontSize: <span class="number">10</span>,</span><br><span class="line">        width: <span class="number">5</span>,</span><br><span class="line">        color: <span class="string">'#000000'</span>,</span><br><span class="line">        alpha: <span class="number">35</span>,</span><br><span class="line">        rotate: <span class="number">35</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    uploadImg(e, num) &#123;</span><br><span class="line">      <span class="comment">//上传图片</span></span><br><span class="line">      <span class="comment">// this.option.img</span></span><br><span class="line">      <span class="keyword">var</span> file = e.target.files[<span class="number">0</span>];</span><br><span class="line">      <span class="keyword">if</span> (!<span class="regexp">/\.(gif|jpg|jpeg|png|bmp|GIF|JPG|PNG)$/</span>.test(e.target.value)) &#123;</span><br><span class="line">        alert(<span class="string">'图片类型必须是.gif,jpeg,jpg,png,bmp中的一种'</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">var</span> reader = <span class="keyword">new</span> FileReader();</span><br><span class="line">      reader.onload = <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> data;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">typeof</span> e.target.result === <span class="string">'object'</span>) &#123;</span><br><span class="line">          <span class="comment">// 把Array Buffer转化为blob 如果是base64不需要</span></span><br><span class="line">          data = <span class="built_in">window</span>.URL.createObjectURL(<span class="keyword">new</span> Blob([e.target.result]));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          data = e.target.result;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (num === <span class="number">1</span>) &#123;</span><br><span class="line">          <span class="keyword">this</span>.preImg = data;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;;</span><br><span class="line">      <span class="comment">// 转化为base64</span></span><br><span class="line">      reader.readAsDataURL(file);</span><br><span class="line">      <span class="comment">// 转化为blob</span></span><br><span class="line">      <span class="comment">// reader.readAsArrayBuffer(file)</span></span><br><span class="line">    &#125;,</span><br><span class="line">    handleDown() &#123;</span><br><span class="line">      <span class="keyword">let</span> node = <span class="keyword">this</span>.$refs.previewImg;</span><br><span class="line">      <span class="keyword">let</span> that = <span class="keyword">this</span>;</span><br><span class="line">      DomToImage.toPng(node)</span><br><span class="line">        .then(<span class="function"><span class="keyword">function</span>(<span class="params">dataUrl</span>) </span>&#123;</span><br><span class="line">          <span class="keyword">var</span> oLink = <span class="built_in">document</span>.createElement(<span class="string">'a'</span>);</span><br><span class="line">          oLink.download = <span class="string">'水印图片.png'</span>;</span><br><span class="line">          oLink.href = dataUrl;</span><br><span class="line">          oLink.click();</span><br><span class="line">          that.$nextTick(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            that.$message.success(<span class="string">'水印图片下载成功'</span>);</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(<span class="function"><span class="keyword">function</span>(<span class="params">error</span>) </span>&#123;</span><br><span class="line">          <span class="built_in">console</span>.error(<span class="string">'oops, something went wrong!'</span>, error);</span><br><span class="line">          that.$message.error(<span class="string">'下载失败'</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  computed: &#123;</span><br><span class="line">    paint() &#123;</span><br><span class="line">      <span class="comment">// 文字长度</span></span><br><span class="line">      <span class="keyword">const</span> wordWidth =</span><br><span class="line">        <span class="keyword">this</span>.watermarkOptions.fontSize * <span class="keyword">this</span>.watermarkOptions.text.split(<span class="string">''</span>).length;</span><br><span class="line">      <span class="keyword">const</span> width = wordWidth + <span class="keyword">this</span>.watermarkOptions.width;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">let</span> svgText = <span class="string">`</span></span><br><span class="line"><span class="string">    &lt;svg xmlns="http://www.w3.org/2000/svg" width="<span class="subst">$&#123;width&#125;</span>px" height="<span class="subst">$&#123;width&#125;</span>px"&gt;</span></span><br><span class="line"><span class="string">    &lt;text x="50%" y="50%"</span></span><br><span class="line"><span class="string">        alignment-baseline="middle"</span></span><br><span class="line"><span class="string">        text-anchor="middle"</span></span><br><span class="line"><span class="string">        stroke="<span class="subst">$&#123;<span class="keyword">this</span>.watermarkOptions.color&#125;</span>"</span></span><br><span class="line"><span class="string">        opacity="<span class="subst">$&#123;<span class="keyword">this</span>.watermarkOptions.alpha <span class="regexp">/ 100&#125;"</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="regexp">        transform="translate($&#123;width /</span> <span class="number">2</span>&#125;</span>, <span class="subst">$&#123;width <span class="regexp">/ 2&#125;) rotate($&#123;</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="regexp">        this.watermarkOptions.rotate</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="regexp">      &#125;) translate(-$&#123;width /</span> <span class="number">2</span>&#125;</span>, -<span class="subst">$&#123;width <span class="regexp">/ 2&#125;)"</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="regexp">        font-weight="100"</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="regexp">        font-size="$&#123;this.watermarkOptions.fontSize&#125;"</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="regexp">        font-family="microsoft yahe"</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="regexp">        &gt;</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="regexp">        $&#123;this.watermarkOptions.text&#125;</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="regexp">    &lt;/</span>text&gt;</span></span></span><br><span class="line"><span class="string"><span class="subst">   &lt;<span class="regexp">/svg&gt;`;</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="regexp"></span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="regexp">      return `url(data:image/</span>svg+xml;base64,$&#123;btoa(<span class="built_in">unescape</span>(<span class="built_in">encodeURIComponent</span>(svgText)))&#125;</span>)`</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近看了一篇用 Angular4+ 写的添加水印功能，觉得挺好玩，就自己试着用 vue 写一个相同功能&lt;/p&gt;
&lt;h2 id=&quot;效果&quot;&gt;&lt;a
      
    
    </summary>
    
    
      <category term="水印" scheme="https://github.com/chengheai/tags/%E6%B0%B4%E5%8D%B0/"/>
    
  </entry>
  
  <entry>
    <title>多个el-select共用一个options且一个option只能用一次</title>
    <link href="https://github.com/chengheai/2019/10/21/%E5%A4%9A%E4%B8%AAel-select%E5%85%B1%E7%94%A8%E4%B8%80%E4%B8%AAoptions%E4%B8%94%E4%B8%80%E4%B8%AAoption%E5%8F%AA%E8%83%BD%E7%94%A8%E4%B8%80%E6%AC%A1/"/>
    <id>https://github.com/chengheai/2019/10/21/多个el-select共用一个options且一个option只能用一次/</id>
    <published>2019-10-21T14:01:16.000Z</published>
    <updated>2021-10-09T08:48:32.087Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>一个表单多个下拉框，假如 options 里有中国，美国，第一个 select 选择里中国那么第二个 select 的 options 中国就置为灰色，反之我第二个选里中国，第一个 options 中中国就置为灰色</p><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://github.com/chengheai/review-demo-image/blob/master/2019-10-21%2022-06-05.2019-10-21%2022_07_14.gif?raw=true" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="DEMO"><a href="#DEMO" class="headerlink" title="DEMO"></a>DEMO</h2><font size="8"><a href="https://chengheai.github.io/daily-vue-demo/#/select" target="_blank" rel="noopener">在线 demo ⛩⛽️🚁✈️📡💈🧧🏮</a></font><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-form</span> <span class="attr">:model</span>=<span class="string">"ruleForm"</span> <span class="attr">ref</span>=<span class="string">"ruleForm"</span> <span class="attr">label-width</span>=<span class="string">"100px"</span> <span class="attr">class</span>=<span class="string">"demo-ruleForm"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">"(item, index) in ruleForm.list"</span> <span class="attr">:key</span>=<span class="string">"index"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-select</span></span></span><br><span class="line"><span class="tag">          <span class="attr">v-model</span>=<span class="string">"item.type"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">clearable</span></span></span><br><span class="line"><span class="tag">          @<span class="attr">change</span>=<span class="string">"selectChange(item.type,index)"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">placeholder</span>=<span class="string">"请选择"</span></span></span><br><span class="line"><span class="tag">        &gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-option</span></span></span><br><span class="line"><span class="tag">            <span class="attr">v-for</span>=<span class="string">"(item,optionIndex)  in options"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">:key</span>=<span class="string">"optionIndex"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">:label</span>=<span class="string">"item.label"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">:disabled</span>=<span class="string">"getDisable(item.value)"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">:value</span>=<span class="string">"item.value"</span></span></span><br><span class="line"><span class="tag">          &gt;</span><span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-select</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span></span></span><br><span class="line"><span class="tag">          <span class="attr">v-if</span>=<span class="string">"index === 0 &amp;&amp; ruleForm.list[0].type !== '' &amp;&amp; ruleForm.list.length&lt;2"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">class</span>=<span class="string">"el-icon-circle-plus-outline ico"</span></span></span><br><span class="line"><span class="tag">          @<span class="attr">click</span>=<span class="string">"add"</span></span></span><br><span class="line"><span class="tag">        &gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">v-if</span>=<span class="string">"index !==0"</span> <span class="attr">class</span>=<span class="string">"el-icon-remove-outline ico"</span> @<span class="attr">click</span>=<span class="string">"del(index)"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="comment">/* eslint-disable */</span></span><br><span class="line"><span class="comment">// 添加数组自定义事件 用来删除数组中的某一项</span></span><br><span class="line"><span class="built_in">Array</span>.prototype.indexOf = <span class="function"><span class="keyword">function</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.length; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>[i] == val) &#123;</span><br><span class="line">      <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">Array</span>.prototype.remove = <span class="function"><span class="keyword">function</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> index = <span class="keyword">this</span>.indexOf(val);</span><br><span class="line">  <span class="keyword">if</span> (index &gt; <span class="number">-1</span>) &#123;</span><br><span class="line">    <span class="keyword">this</span>.splice(index, <span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      ruleForm: &#123;</span><br><span class="line">        list: [</span><br><span class="line">          &#123;</span><br><span class="line">            type: <span class="string">''</span>,</span><br><span class="line">          &#125;,</span><br><span class="line">        ],</span><br><span class="line">      &#125;,</span><br><span class="line">      options: [</span><br><span class="line">        &#123;</span><br><span class="line">          label: <span class="string">'中国'</span>,</span><br><span class="line">          value: <span class="number">1</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          label: <span class="string">'美国'</span>,</span><br><span class="line">          value: <span class="number">2</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">      ],</span><br><span class="line">      selectedOptions: [],</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    selectChange(value, index) &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="built_in">arguments</span>);</span><br><span class="line">      <span class="built_in">console</span>.log(value, index);</span><br><span class="line">      <span class="keyword">this</span>.selectedOptions[index] = value;</span><br><span class="line">    &#125;,</span><br><span class="line">    getDisable(value) &#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.selectedOptions.indexOf(value) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    add() &#123;</span><br><span class="line">      <span class="keyword">this</span>.ruleForm.list.push(&#123;</span><br><span class="line">        type: <span class="string">''</span>,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    del(index) &#123;</span><br><span class="line">      <span class="comment">// 删除时恢复可选</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.ruleForm.list[index] || <span class="keyword">this</span>.ruleForm.list[index] == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.selectedOptions.remove(<span class="keyword">this</span>.ruleForm.list[index].type);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="keyword">this</span>.selectedOptions);</span><br><span class="line">      <span class="keyword">this</span>.ruleForm.list.splice(index, <span class="number">1</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;style lang="css" scoped&gt;</span></span><br><span class="line"><span class="regexp">.ico &#123;</span></span><br><span class="line"><span class="regexp">  font-size: 40px;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">&lt;/</span>style&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;需求&quot;&gt;&lt;a href=&quot;#需求&quot; class=&quot;headerlink&quot; title=&quot;需求&quot;&gt;&lt;/a&gt;需求&lt;/h2&gt;&lt;p&gt;一个表单多个下拉框，假如 options 里有中国，美国，第一个 select 选择里中国那么第二个 select 的 options 中国
      
    
    </summary>
    
    
      <category term="element-ui" scheme="https://github.com/chengheai/tags/element-ui/"/>
    
  </entry>
  
  <entry>
    <title>git分支上删除某次提交与获取其他分支上某个提交</title>
    <link href="https://github.com/chengheai/2019/10/15/git%E5%88%86%E6%94%AF%E4%B8%8A%E5%88%A0%E9%99%A4%E6%9F%90%E6%AC%A1%E6%8F%90%E4%BA%A4/"/>
    <id>https://github.com/chengheai/2019/10/15/git分支上删除某次提交/</id>
    <published>2019-10-15T14:10:02.000Z</published>
    <updated>2021-10-09T08:48:32.067Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>～在日常开发中，常常会碰到这样的问题，我们在dev分支上写好的代码，经过严格的测试确认无误没有问题，打包发不到正式环境上去了，后来产品经理说这个功能不是本期上的，但是正式服已经有了，那怎么弄呢？</p><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><p>例如，现在当前分支上代码有三次提交，我想把其中间一次提交去掉，怎么做？<br>步骤：<br> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git log <span class="comment">// 查看log信息记下commitId</span></span><br></pre></td></tr></table></figure></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://github.com/chengheai/review-demo-image/blob/master/WX20191015-221740@2x.png?raw=true" alt title>                </div>                <div class="image-caption"></div>            </figure> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rebase -i commitId <span class="comment">// [上一次提交的commitId]</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://github.com/chengheai/review-demo-image/blob/master/WX20191015-222936@2x.png?raw=true" alt title>                </div>                <div class="image-caption"></div>            </figure> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim  i[插入] <span class="comment">// 将需要修改的commit的 pick改为drop</span></span><br></pre></td></tr></table></figure> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">esc wq <span class="comment">// 退出插入模式，保存退出</span></span><br></pre></td></tr></table></figure> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status <span class="comment">// 状态查看</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://img-blog.csdnimg.cn/20191015225855423.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NoaTExMzA=,size_16,color_FFFFFF,t_70" alt title>                </div>                <div class="image-caption"></div>            </figure> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin branch -f <span class="comment">// 提交并覆盖远程</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://github.com/chengheai/review-demo-image/blob/master/WX20191015-223346@2x.png?raw=true" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="附加📎"><a href="#附加📎" class="headerlink" title="附加📎"></a>附加📎</h2><p>当前分支拉取其他分支某次提交代码 [git cherry-pick commitID]</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git cherry-pick commitID</span><br></pre></td></tr></table></figure><p>属于复制的操作，对源分支不影响～</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;～在日常开发中，常常会碰到这样的问题，我们在dev分支上写好的代码，经过严格的测试确认无误没有问题，打包发不到正式环境上去了，后来产品经理说
      
    
    </summary>
    
    
      <category term="git" scheme="https://github.com/chengheai/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Linux执行history命令显示命令执行时间</title>
    <link href="https://github.com/chengheai/2019/09/17/Linux%E6%89%A7%E8%A1%8Chistory%E5%91%BD%E4%BB%A4%E6%98%BE%E7%A4%BA%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%97%B6%E9%97%B4/"/>
    <id>https://github.com/chengheai/2019/09/17/Linux执行history命令显示命令执行时间/</id>
    <published>2019-09-17T13:42:43.000Z</published>
    <updated>2021-10-09T08:48:32.057Z</updated>
    
    <content type="html"><![CDATA[<h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><p>在线快速生成JSON对象api<br>【MYJSON】(<a href="http://myjson.com/1g17dp" target="_blank" rel="noopener">http://myjson.com/1g17dp</a>)</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在实际项目开发中，往往碰到这样一种情况，我明明没有敲这个指令啊，怎么代码被覆盖了？怎么回事？👺<br>用history命令查看 ：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://github.com/chengheai/review-demo-image/blob/master/WX20190917-212406@2x.png?raw=true" alt title>                </div>                <div class="image-caption"></div>            </figure><br>这时间也没有也不知道是谁敲的名字，这可咋办？</p><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://github.com/chengheai/review-demo-image/blob/master/WX20190917-215133@2x.png?raw=true" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h2><p>在你的命令行中贱【键】入<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">'export HISTTIMEFORMAT="%Y-%m-%d %H:%M:%S  `whoami` "'</span>&gt;&gt;/etc/profile</span><br></pre></td></tr></table></figure></p><p>然后<br>再输入<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure></p><p>OK，完了！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;附录&quot;&gt;&lt;a href=&quot;#附录&quot; class=&quot;headerlink&quot; title=&quot;附录&quot;&gt;&lt;/a&gt;附录&lt;/h2&gt;&lt;p&gt;在线快速生成JSON对象api&lt;br&gt;【MYJSON】(&lt;a href=&quot;http://myjson.com/1g17dp&quot; target=
      
    
    </summary>
    
    
      <category term="linux" scheme="https://github.com/chengheai/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>在Linux服务器上Nginx部署vue静态项目</title>
    <link href="https://github.com/chengheai/2019/09/11/%E5%9C%A8Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E9%83%A8%E7%BD%B2vue%E9%9D%99%E6%80%81%E9%A1%B9%E7%9B%AE/"/>
    <id>https://github.com/chengheai/2019/09/11/在Linux服务器上部署vue静态项目/</id>
    <published>2019-09-11T13:56:37.000Z</published>
    <updated>2021-10-09T08:48:32.087Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近看了看nginx，觉得挺好玩，刚好自己有一个VPN测试服务器，就自己敲了一遍，部署一个vue-cli初始化项目<br>～另外给大家推荐一个免费试玩的服务器<a href="https://cloud.tencent.com/developer/labs/lab/10078" target="_blank" rel="noopener">腾讯云☁️实验室</a>,每天有大约6个小时的时间可以使用，两个ubuntu，一个ubuntu是3小时<br>3 + 3 = 6</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="nginx安装"><a href="#nginx安装" class="headerlink" title="nginx安装"></a>nginx安装</h3><p>～命令行输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://nginx.org/download/nginx-1.12.2.tar.gz</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 安装依赖</span><br><span class="line">yum -y install gcc zlib zlib-devel pcre-devel openssl openssl-devel</span><br><span class="line"># 解压缩</span><br><span class="line">tar -zxvf linux-nginx-1.12.2.tar.gz</span><br><span class="line">cd nginx-1.12.2/</span><br><span class="line"># 执行配置</span><br><span class="line">./configure</span><br><span class="line"># 编译安装(默认安装在/usr/local/nginx)</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>一顿闪烁之后你将发现你的/usr/local下多了个nginx文件夹<br>验证信息：<br>nginx主配置文件：/usr/local/nginx/conf/nginx.conf<br>nginx日志文件：/usr/local/nginx/logs/access.log<br>启动Nginx：/usr/local/nginx/sbin/nginx</p><p>然后直接访问ip地址，比如\：<a href="http://192.168.1.1/\，如果能看到如下Nginx主页说明安装成功了" target="_blank" rel="noopener">http://192.168.1.1/\，如果能看到如下Nginx主页说明安装成功了</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://raw.githubusercontent.com/chengheai/review-demo-image/master/14795543-4ea3783126a0d378.webp" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="上传部署文件"><a href="#上传部署文件" class="headerlink" title="上传部署文件"></a>上传部署文件</h2><p>window机器可以使用winscp上传<br>mac的话可以使用lrzsz<br>这个使用mac<br>执行命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 打包</span></span><br><span class="line">tar zcvf dist.tar.gz dist/</span><br><span class="line"><span class="meta">#</span><span class="bash"> 解压</span></span><br><span class="line">tar zxvf dist.tar.gz</span><br></pre></td></tr></table></figure><p>在根目录下新建nginx文件夹<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~/nginx</span><br><span class="line">cp -rf dist ./../vue</span><br></pre></td></tr></table></figure></p><p>运行下面这段话可以nginx的配置文件<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo /usr/<span class="built_in">local</span>/nginx/sbin/nginx -t</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 下面这行代码说明 nginx 的配置文件是 /usr/<span class="built_in">local</span>/nginx/conf/nginx.conf</span></span><br><span class="line">nginx: the configuration file /usr/local/nginx/conf/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /usr/local/nginx/conf/nginx.conf test is successful</span><br></pre></td></tr></table></figure></p><h2 id="配置nginx"><a href="#配置nginx" class="headerlink" title="配置nginx"></a>配置nginx</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://github.com/chengheai/review-demo-image/blob/master/WechatIMG211.png?raw=true" alt title>                </div>                <div class="image-caption"></div>            </figure><p>修改完毕，保存退出。运行以下命令来重启 Nginx，让配置生效：<br>sudo /usr/local/nginx/sbin/nginx -s reload<br>刚开始因为没有配置权限，访问会出现403 Forbidden错误<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod 755 ~</span><br><span class="line">sudo chmod 755 ~/nginx</span><br><span class="line">sudo chmod 755 ~/nginx/vue</span><br></pre></td></tr></table></figure></p><p>最后，你能看到下面的页面<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://github.com/chengheai/review-demo-image/blob/master/WX20190911-224210@2x.png?raw=true" alt title>                </div>                <div class="image-caption"></div>            </figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近看了看nginx，觉得挺好玩，刚好自己有一个VPN测试服务器，就自己敲了一遍，部署一个vue-cli初始化项目&lt;br&gt;～另外给大家推荐一
      
    
    </summary>
    
    
      <category term="linux" scheme="https://github.com/chengheai/tags/linux/"/>
    
      <category term="vue" scheme="https://github.com/chengheai/tags/vue/"/>
    
      <category term="部署" scheme="https://github.com/chengheai/tags/%E9%83%A8%E7%BD%B2/"/>
    
  </entry>
  
  <entry>
    <title>解决vscode中js文件提示typescript语法报错</title>
    <link href="https://github.com/chengheai/2019/09/11/%E8%A7%A3%E5%86%B3vscode%E4%B8%ADjs%E6%96%87%E4%BB%B6%E6%8F%90%E7%A4%BAtypescript%E8%AF%AD%E6%B3%95%E6%8A%A5%E9%94%99/"/>
    <id>https://github.com/chengheai/2019/09/11/解决vscode中js文件提示typescript语法报错/</id>
    <published>2019-09-11T13:45:33.000Z</published>
    <updated>2021-10-09T08:48:32.096Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近在vue项目中，全局安装了一下typescript，再看看vue项目代码就有一大堆ts提示错误<br>然后网上一搜也没啥好答案<br>～例如：<br>❌❌解决办法：在设置里面加上 “javascript.validate.enable”: false 禁用默认的 js 验证<br>这样禁用那我js写错了都不知道。。。</p><h2 id="正解"><a href="#正解" class="headerlink" title="正解"></a>正解</h2><p>～设置中搜索tsconfig -&gt;Check JS Experimental Decorators 去掉勾选☑️🐳<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://github.com/chengheai/review-demo-image/blob/master/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20190911110647.png?raw=true" alt title>                </div>                <div class="image-caption"></div>            </figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近在vue项目中，全局安装了一下typescript，再看看vue项目代码就有一大堆ts提示错误&lt;br&gt;然后网上一搜也没啥好答案&lt;br&gt;～
      
    
    </summary>
    
    
      <category term="vscode" scheme="https://github.com/chengheai/tags/vscode/"/>
    
  </entry>
  
  <entry>
    <title>Axios无法在Safari浏览器及微信中打开</title>
    <link href="https://github.com/chengheai/2019/09/09/Axios%E6%97%A0%E6%B3%95%E5%9C%A8Safari%E6%B5%8F%E8%A7%88%E5%99%A8%E5%8F%8A%E5%BE%AE%E4%BF%A1%E4%B8%AD%E6%89%93%E5%BC%80/"/>
    <id>https://github.com/chengheai/2019/09/09/Axios无法在Safari浏览器及微信中打开/</id>
    <published>2019-09-09T13:31:05.000Z</published>
    <updated>2021-10-09T08:48:32.049Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近在项目开发中碰到这样一个问题，刚登录完用 axios 调订单列表接口时，总是提示 token 过期失效。仔细想想，刚登录的返回的 token 都没存在 window.document.cookie 中，怎么会过期呢。经过沿路抽丝剥茧，debugger，打印出来的 token 依然是最新的返回，这使得我不禁陷入了沉思 🧕🏿👳🏿‍♂️，为啥？</p><h2 id="正常代码"><a href="#正常代码" class="headerlink" title="正常代码"></a>正常代码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// list</span></span><br><span class="line">getList() &#123;</span><br><span class="line">  <span class="keyword">this</span>.$axios</span><br><span class="line">    .get(url, &#123;</span><br><span class="line">      headers: &#123;</span><br><span class="line">        token: <span class="string">'xxx'</span></span><br><span class="line">      &#125;,</span><br><span class="line">      withCredentials: <span class="literal">true</span>,</span><br><span class="line">      params: &#123;</span><br><span class="line">        page: <span class="keyword">this</span>.page,</span><br><span class="line">        per_page: <span class="number">6</span>,</span><br><span class="line">        others: <span class="string">'xxx'</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'res: '</span>, res);</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'err: '</span>, err);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>这代码看起来没啥问题啊，为啥在safari浏览器就不行了呢？<br>于是。。</p><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><h3 id="修改后的代码-方法一"><a href="#修改后的代码-方法一" class="headerlink" title="修改后的代码[方法一]"></a>修改后的代码[方法一]</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// list</span></span><br><span class="line">getList() &#123;</span><br><span class="line">  <span class="keyword">this</span>.$axios</span><br><span class="line">    .get(<span class="string">`<span class="subst">$&#123;url&#125;</span>?nocache=<span class="subst">$&#123;<span class="keyword">new</span> <span class="built_in">Date</span>().getTime()&#125;</span>`</span>, &#123;</span><br><span class="line">      headers: &#123;</span><br><span class="line">        token: <span class="string">'xxx'</span></span><br><span class="line">      &#125;,</span><br><span class="line">      withCredentials: <span class="literal">true</span>,</span><br><span class="line">      params: &#123;</span><br><span class="line">        page: <span class="keyword">this</span>.page,</span><br><span class="line">        per_page: <span class="number">6</span>,</span><br><span class="line">        others: <span class="string">'xxx'</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'res: '</span>, res);</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'err: '</span>, err);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h3 id="修改后的代码-方法二"><a href="#修改后的代码-方法二" class="headerlink" title="修改后的代码[方法二]"></a>修改后的代码[方法二]</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// list</span></span><br><span class="line">getList() &#123;</span><br><span class="line">  <span class="keyword">this</span>.$axios</span><br><span class="line">    .get(url, &#123;</span><br><span class="line">      headers: &#123;</span><br><span class="line">        token: <span class="string">'xxx'</span>,</span><br><span class="line">        Pragma: no-cache, <span class="comment">// 注释1</span></span><br><span class="line">        <span class="string">'Cache-control'</span>: no-cache <span class="comment">// 注释2</span></span><br><span class="line">      &#125;,</span><br><span class="line">      withCredentials: <span class="literal">true</span>,</span><br><span class="line">      params: &#123;</span><br><span class="line">        page: <span class="keyword">this</span>.page,</span><br><span class="line">        per_page: <span class="number">6</span>,</span><br><span class="line">        others: <span class="string">'xxx'</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'res: '</span>, res);</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'err: '</span>, err);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>这样一来的话就给接口添加了一个参数，而且这参数与上一次的又不一样，所以就不会存在缓存这一说了。</p><h2 id="问题【缘】由"><a href="#问题【缘】由" class="headerlink" title="问题【缘】由"></a>问题【缘】由</h2><p>～据说是某些浏览器请求接口的时候，参数未变，浏览器不会发起新的请求，就用旧的数据去请求，而请求头headers存放在cookie里；故而没有更新cookie里的token。<br>～【注释1】<br>Pragma 是一个在 HTTP/1.0 中规定的通用首部，这个首部的效果依赖于不同的实现，所以在“请求-响应”链中可能会有不同的效果。它用来向后兼容只支持 HTTP/1.0 协议的缓存服务器，那时候 HTTP/1.1 协议中的 Cache-Control 还没有出来。<br>～【注释2】<br>Cache-Control 通用消息头字段，被用于在http请求和响应中，通过指定指令来实现缓存机制。缓存指令是单向的，这意味着在请求中设置的指令，不一定被包含在响应中。<br>~总的来说是换的原因。相信还有别的方法可以解决这个问题</p><h2 id="相关文档"><a href="#相关文档" class="headerlink" title="相关文档"></a>相关文档</h2><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Pragma" target="_blank" rel="noopener">Headers/Pragma</a><br><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Cache-Control" target="_blank" rel="noopener">Headers/Cache-Control</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近在项目开发中碰到这样一个问题，刚登录完用 axios 调订单列表接口时，总是提示 token 过期失效。仔细想想，刚登录的返回的 tok
      
    
    </summary>
    
    
      <category term="axios" scheme="https://github.com/chengheai/tags/axios/"/>
    
      <category term="小技巧" scheme="https://github.com/chengheai/tags/%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>vue中audio实现微信语音播放动画</title>
    <link href="https://github.com/chengheai/2019/09/09/vue%E4%B8%ADaudio%E5%AE%9E%E7%8E%B0%E5%BE%AE%E4%BF%A1%E8%AF%AD%E9%9F%B3%E6%92%AD%E6%94%BE%E5%8A%A8%E7%94%BB/"/>
    <id>https://github.com/chengheai/2019/09/09/vue中audio实现微信语音播放动画/</id>
    <published>2019-09-09T12:58:24.000Z</published>
    <updated>2021-10-09T08:48:32.080Z</updated>
    
    <content type="html"><![CDATA[<h2 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://github.com/chengheai/review-demo-image/blob/master/2019-09-09%2021-01-51.2019-09-09%2021_02_34.gif?raw=true" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>拿到时长做倒计时，时长 = （ 时长 + 1 ） * 100; destroy的时候清除一下</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"display:none"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">audio</span> <span class="attr">controls</span>=<span class="string">"controls"</span> <span class="attr">ref</span>=<span class="string">"audio"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">:src</span>=<span class="string">"url || ''"</span> <span class="attr">type</span>=<span class="string">"audio/mpeg"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"voice-bg"</span> @<span class="attr">click</span>=<span class="string">"handlePlay"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span></span></span><br><span class="line"><span class="tag">    <span class="attr">v-if</span>=<span class="string">"isPlaying"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">src</span>=<span class="string">"./../../assets/images/goods/voice-play.gif"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">alt</span>=<span class="string">""</span></span></span><br><span class="line"><span class="tag">  /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span></span></span><br><span class="line"><span class="tag">    <span class="attr">v-else</span></span></span><br><span class="line"><span class="tag">    <span class="attr">src</span>=<span class="string">"./../../assets/images/goods/voice.png"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">alt</span>=<span class="string">""</span></span></span><br><span class="line"><span class="tag">  /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; duration || 0 &#125;&#125;"<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">data() &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    url: <span class="string">''</span>,</span><br><span class="line">    timer: <span class="literal">null</span>,</span><br><span class="line">    isPlaying: <span class="literal">false</span>,</span><br><span class="line">    currentTime: <span class="number">0</span>,</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line">methods:&#123;</span><br><span class="line">  handlePlay() &#123;</span><br><span class="line">    <span class="keyword">let</span> audio = <span class="keyword">this</span>.$refs.audio;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">this</span>.isPlaying) &#123;</span><br><span class="line">      audio.play();</span><br><span class="line">      <span class="keyword">this</span>.isPlaying = <span class="literal">true</span>;</span><br><span class="line">      <span class="keyword">this</span>.watchEnd();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      audio.pause();</span><br><span class="line">      clearTimeout(<span class="keyword">this</span>.timer);</span><br><span class="line">      <span class="keyword">this</span>.isPlaying = <span class="literal">false</span>;</span><br><span class="line">      audio.currentTime = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  watchEnd() &#123;</span><br><span class="line">    <span class="keyword">let</span> that = <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">this</span>.timer = setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      that.isPlaying = <span class="literal">false</span>;</span><br><span class="line">    &#125;, (that.duration + <span class="number">1</span>) * <span class="number">1000</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;,</span><br><span class="line">beforeDestroy() &#123;</span><br><span class="line">  clearTimeout(<span class="keyword">this</span>.timer);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2><h3 id="关于获取audio信息接口"><a href="#关于获取audio信息接口" class="headerlink" title="关于获取audio信息接口"></a>关于获取audio信息接口</h3><p><a href="https://developer.qiniu.com/dora/api/1247/audio-and-video-metadata-information-avinfo" target="_blank" rel="noopener">七牛云🐂🐃🐕🐄</a><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.$axios.get(<span class="string">`<span class="subst">$&#123;<span class="keyword">this</span>.info.url&#125;</span>?avinfo`</span>).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> &#123; streams &#125; = res.data;</span><br><span class="line">  <span class="keyword">this</span>.duration = <span class="built_in">parseInt</span>((streams &amp;&amp; streams[<span class="number">0</span>].duration) || <span class="number">0</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><h3 id="UI图片"><a href="#UI图片" class="headerlink" title="UI图片"></a>UI图片</h3><p><a href="https://github.com/chengheai/chengheai.github.io/issues/1">下载地址</a><br><a href="https://github.com/chengheai/chengheai.github.io/issues/1">isPlaying gif</a><br><a href="https://github.com/chengheai/chengheai.github.io/issues/1">isPause png</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;预览&quot;&gt;&lt;a href=&quot;#预览&quot; class=&quot;headerlink&quot; title=&quot;预览&quot;&gt;&lt;/a&gt;预览&lt;/h2&gt;&lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;

      
    
    </summary>
    
    
      <category term="vue" scheme="https://github.com/chengheai/tags/vue/"/>
    
  </entry>
  
</feed>
