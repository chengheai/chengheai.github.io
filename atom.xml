<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CHI1130</title>
  
  <subtitle>业精于勤，荒于嬉；行成于思，毁于随</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://github.com/chengheai/"/>
  <updated>2022-02-15T12:49:34.347Z</updated>
  <id>https://github.com/chengheai/</id>
  
  <author>
    <name>HEAI</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>el-table动态合并单元格</title>
    <link href="https://github.com/chengheai/2022/02/15/el-table%E5%8A%A8%E6%80%81%E5%90%88%E5%B9%B6%E5%8D%95%E5%85%83%E6%A0%BC/"/>
    <id>https://github.com/chengheai/2022/02/15/el-table动态合并单元格/</id>
    <published>2022-02-15T12:36:30.000Z</published>
    <updated>2022-02-15T12:49:34.347Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求背景"><a href="#需求背景" class="headerlink" title="需求背景"></a>需求背景</h2><ul><li><p>批量创建多个计划（plan），计划按组（group）进行分配，计划创建完成之后可以修改，删除</p></li><li><p>每个组第一列单元格合并显示第几组，组内添加全选/反选组下面的计划</p></li><li><p>组内计划删除完了之后组删除</p></li></ul><h2 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h2><p><a href="https://chengheai.github.io/daily-vue-demo/#/span-table" target="_blank" rel="noopener">在线测试</a><br><a href="https://github.com/chengheai/daily-vue-demo">代码github</a></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"padding:0 20px"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-form</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:inline</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:model</span>=<span class="string">"formInline"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:rules</span>=<span class="string">"rules"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">"demo-form-inline"</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">"广告数"</span> <span class="attr">prop</span>=<span class="string">"ad"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">"formInline.ad"</span> <span class="attr">placeholder</span>=<span class="string">"广告数"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">"广告组内广告数"</span> <span class="attr">prop</span>=<span class="string">"each"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">"formInline.each"</span> <span class="attr">placeholder</span>=<span class="string">"广告组数"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"primary"</span> @<span class="attr">click</span>=<span class="string">"onSubmit"</span>&gt;</span>生成数据<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-divider</span>&gt;</span><span class="tag">&lt;/<span class="name">el-divider</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-table</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:data</span>=<span class="string">"tableData"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:span-method</span>=<span class="string">"objectSpanMethod"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">border</span></span></span><br><span class="line"><span class="tag">      <span class="attr">style</span>=<span class="string">"width: 100%"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:max-height</span>=<span class="string">"650"</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">"group"</span> <span class="attr">label</span>=<span class="string">"组id"</span>&gt;</span> <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">"id"</span> <span class="attr">label</span>=<span class="string">"计划id"</span>&gt;</span> <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">"name"</span> <span class="attr">label</span>=<span class="string">"姓名"</span>&gt;</span> <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">"province"</span> <span class="attr">label</span>=<span class="string">"省市"</span>&gt;</span> <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">"address"</span> <span class="attr">label</span>=<span class="string">"地址"</span>&gt;</span> <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">fixed</span>=<span class="string">"right"</span> <span class="attr">label</span>=<span class="string">"操作"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">template</span> <span class="attr">slot-scope</span>=<span class="string">"scope"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-button</span></span></span><br><span class="line"><span class="tag">            @<span class="attr">click</span>=<span class="string">"handleUpdate(scope.row, 'edit')"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">size</span>=<span class="string">"small"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">type</span>=<span class="string">"primary"</span></span></span><br><span class="line"><span class="tag">            &gt;</span>编辑<span class="tag">&lt;/<span class="name">el-button</span></span></span><br><span class="line"><span class="tag">          &gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-button</span></span></span><br><span class="line"><span class="tag">            @<span class="attr">click</span>=<span class="string">"handleUpdate(scope.row, 'del')"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">type</span>=<span class="string">"danger"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">size</span>=<span class="string">"small"</span></span></span><br><span class="line"><span class="tag">            &gt;</span>删除<span class="tag">&lt;/<span class="name">el-button</span></span></span><br><span class="line"><span class="tag">          &gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">DialogUpdate</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:payload</span>=<span class="string">"payload"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:visible.sync</span>=<span class="string">"dialogVisible"</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">submit</span>=<span class="string">"handleSubmit"</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> DialogUpdate <span class="keyword">from</span> <span class="string">"./DialogUpdate"</span>;</span><br><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">  name: <span class="string">"王小虎"</span>,</span><br><span class="line">  province: <span class="string">"上海"</span>,</span><br><span class="line">  city: <span class="string">"普陀区"</span>,</span><br><span class="line">  address: <span class="string">"上海市普陀区金沙江路 1518 弄"</span>,</span><br><span class="line">  zip: <span class="number">200333</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  components: &#123; DialogUpdate &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    <span class="keyword">const</span> validatePass = <span class="function">(<span class="params">rule, value, callback</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">"this.formInline: "</span>, <span class="keyword">this</span>.formInline);</span><br><span class="line">      <span class="keyword">const</span> &#123; ad, each &#125; = <span class="keyword">this</span>.formInline;</span><br><span class="line">      <span class="keyword">if</span> (+ad &lt; +each) &#123;</span><br><span class="line">        callback(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">"每组内数小于计划数"</span>));</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        callback();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      payload: &#123;&#125;,</span><br><span class="line">      dialogVisible: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">      formInline: &#123;</span><br><span class="line">        ad: <span class="number">20</span>,</span><br><span class="line">        each: <span class="number">2</span></span><br><span class="line">      &#125;,</span><br><span class="line">      table: [],</span><br><span class="line">      rules: &#123;</span><br><span class="line">        ad: [</span><br><span class="line">          &#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">"广告数"</span>, <span class="attr">trigger</span>: <span class="string">"change"</span> &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            pattern: <span class="regexp">/^(\d+)(\d+)?$/</span>,</span><br><span class="line">            message: <span class="string">"请输入数字"</span>,</span><br><span class="line">            trigger: <span class="string">"change"</span></span><br><span class="line">          &#125;,</span><br><span class="line">          &#123; <span class="attr">validator</span>: validatePass, <span class="attr">trigger</span>: <span class="string">"change"</span> &#125;</span><br><span class="line">        ],</span><br><span class="line">        each: [</span><br><span class="line">          &#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">"广告组数"</span>, <span class="attr">trigger</span>: <span class="string">"change"</span> &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            pattern: <span class="regexp">/^(\d+)(\d+)?$/</span>,</span><br><span class="line">            message: <span class="string">"请输入数字"</span>,</span><br><span class="line">            trigger: <span class="string">"change"</span></span><br><span class="line">          &#125;,</span><br><span class="line">          &#123; <span class="attr">validator</span>: validatePass, <span class="attr">trigger</span>: <span class="string">"change"</span> &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  computed: &#123;</span><br><span class="line">    tableData: &#123;</span><br><span class="line">      <span class="keyword">get</span>() &#123;</span><br><span class="line">        <span class="keyword">let</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.table.map(<span class="function">(<span class="params">row, index</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (index === count) &#123;</span><br><span class="line">            <span class="keyword">const</span> len = <span class="keyword">this</span>.table.filter(<span class="function"><span class="params">item</span> =&gt;</span> item.group === row.group)</span><br><span class="line">              .length;</span><br><span class="line">            count += len;</span><br><span class="line">            <span class="keyword">return</span> &#123;</span><br><span class="line">              ...row,</span><br><span class="line">              rowspan: len,</span><br><span class="line">              colspan: <span class="number">1</span></span><br><span class="line">            &#125;;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">return</span> &#123;</span><br><span class="line">            ...row,</span><br><span class="line">            colspan: <span class="number">0</span>,</span><br><span class="line">            rowspan: <span class="number">0</span></span><br><span class="line">          &#125;;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    <span class="keyword">this</span>.onSubmit();</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    handleUpdate(row, action) &#123;</span><br><span class="line">      <span class="keyword">if</span> (action === <span class="string">"del"</span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.table = <span class="keyword">this</span>.table.filter(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">return</span> ![row.id].includes(item.id);</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.payload = &#123; ...row &#125;;</span><br><span class="line">        <span class="keyword">this</span>.dialogVisible = <span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    handleSubmit(p) &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">"p: "</span>, p);</span><br><span class="line">      <span class="keyword">this</span>.table = <span class="keyword">this</span>.table.map(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> [p].find(<span class="function"><span class="params">i</span> =&gt;</span> i.id === item.id) || item;</span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">"this.table: "</span>, <span class="keyword">this</span>.table);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">this</span>.dialogVisible = <span class="literal">false</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    objectSpanMethod(&#123; row, columnIndex &#125;) &#123;</span><br><span class="line">      <span class="keyword">if</span> (columnIndex === <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">          rowspan: row.rowspan,</span><br><span class="line">          colspan: row.colspan</span><br><span class="line">        &#125;;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    onSubmit() &#123;</span><br><span class="line">      <span class="keyword">let</span> group = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">this</span>.table = [...Array(+<span class="keyword">this</span>.formInline.ad).fill(obj)].map(</span><br><span class="line">        (item, index) =&gt; &#123;</span><br><span class="line">          group = <span class="built_in">Math</span>.floor(index / +<span class="keyword">this</span>.formInline.each) + <span class="number">1</span>;</span><br><span class="line">          <span class="keyword">return</span> &#123;</span><br><span class="line">            ...item,</span><br><span class="line">            id: <span class="string">`id_<span class="subst">$&#123;index&#125;</span>`</span>,</span><br><span class="line">            group: <span class="string">`group_<span class="subst">$&#123;group&#125;</span>`</span></span><br><span class="line">          &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">      );</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">"submit!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;需求背景&quot;&gt;&lt;a href=&quot;#需求背景&quot; class=&quot;headerlink&quot; title=&quot;需求背景&quot;&gt;&lt;/a&gt;需求背景&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;批量创建多个计划（plan），计划按组（group）进行分配，计划创建完成之后可以修改，删除&lt;/p&gt;
&lt;/
      
    
    </summary>
    
    
      <category term="vue" scheme="https://github.com/chengheai/tags/vue/"/>
    
      <category term="element-ui" scheme="https://github.com/chengheai/tags/element-ui/"/>
    
  </entry>
  
  <entry>
    <title>mockjs生成图片提示Too big of an image!</title>
    <link href="https://github.com/chengheai/2021/11/25/mockjs%E7%94%9F%E6%88%90%E5%9B%BE%E7%89%87%E6%8F%90%E7%A4%BA/"/>
    <id>https://github.com/chengheai/2021/11/25/mockjs生成图片提示/</id>
    <published>2021-11-25T13:55:28.000Z</published>
    <updated>2021-11-25T14:05:38.353Z</updated>
    
    <content type="html"><![CDATA[<h2 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h2><p><a href="https://dummyimage.com/200x100" target="_blank" rel="noopener">正确的 🦑 https://dummyimage.com/200x100</a><br><a href="https://dummyimage.com/200×100" target="_blank" rel="noopener">错误的 🐙 https://dummyimage.com/200×100</a></p><blockquote><p>经过对比发现是 x 符号的问题</p></blockquote><h2 id="代码修改"><a href="#代码修改" class="headerlink" title="代码修改"></a>代码修改</h2><p>直接 replace 替换就好了<br><a href="https://blog.stack021.cn/daily-react-demo/#/users" target="_blank" rel="noopener">在线 DEMO</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> Mock = <span class="built_in">require</span>(<span class="string">'mockjs'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="string">'GET /mock/api/users'</span>: Mock.mock(&#123;</span><br><span class="line">    status: <span class="string">'success'</span>,</span><br><span class="line">    <span class="string">'list|20-40'</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        id: <span class="string">'@id'</span>, <span class="comment">//随机id</span></span><br><span class="line">        name: <span class="string">'@cname'</span>, <span class="comment">//随机名称</span></span><br><span class="line">        nickName: <span class="string">'@clast'</span>, <span class="comment">// 随机昵称</span></span><br><span class="line">        phone: <span class="regexp">/^1[34578]\d&#123;9&#125;$/</span>, <span class="comment">//随机电话号码</span></span><br><span class="line">        <span class="string">'level|1-5'</span>: <span class="number">1</span>, <span class="comment">//等级</span></span><br><span class="line">        address: <span class="string">'@county(true)'</span>, <span class="comment">//随机地址</span></span><br><span class="line">        email: <span class="string">'@email'</span>, <span class="comment">//随机邮箱</span></span><br><span class="line">        <span class="string">'sex|0-2'</span>: <span class="number">2</span>, <span class="comment">//随机性别</span></span><br><span class="line">        createTime: <span class="string">'@datetime'</span>, <span class="comment">//创建时间</span></span><br><span class="line">        info() &#123;</span><br><span class="line">          <span class="keyword">return</span> Mock.Random.cparagraph()</span><br><span class="line">        &#125;, <span class="comment">// 说明</span></span><br><span class="line">        avatar() &#123;</span><br><span class="line">          <span class="comment">//用户头像</span></span><br><span class="line">          <span class="keyword">return</span> Mock.Random.image(<span class="string">'100×100'</span>, Mock.Random.color(), <span class="string">'#FFF'</span>, <span class="keyword">this</span>.nickName).replace(</span><br><span class="line">            <span class="string">'×'</span>,</span><br><span class="line">            <span class="string">'x'</span></span><br><span class="line">          )</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;),</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;对比&quot;&gt;&lt;a href=&quot;#对比&quot; class=&quot;headerlink&quot; title=&quot;对比&quot;&gt;&lt;/a&gt;对比&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://dummyimage.com/200x100&quot; target=&quot;_blank&quot; rel=&quot;noopener
      
    
    </summary>
    
    
      <category term="mockjs" scheme="https://github.com/chengheai/tags/mockjs/"/>
    
  </entry>
  
  <entry>
    <title>image!</title>
    <link href="https://github.com/chengheai/2021/11/25/image/"/>
    <id>https://github.com/chengheai/2021/11/25/image/</id>
    <published>2021-11-25T13:54:44.000Z</published>
    <updated>2021-11-25T13:54:44.080Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>vue实现树形tree展示组件封装</title>
    <link href="https://github.com/chengheai/2021/11/02/vue%E5%AE%9E%E7%8E%B0%E6%A0%91%E5%BD%A2tree%E5%B1%95%E7%A4%BA%E7%BB%84%E4%BB%B6%E5%B0%81%E8%A3%85/"/>
    <id>https://github.com/chengheai/2021/11/02/vue实现树形tree展示组件封装/</id>
    <published>2021-11-02T14:04:45.000Z</published>
    <updated>2021-11-02T14:17:03.561Z</updated>
    
    <content type="html"><![CDATA[<h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><a href="https://blog.stack021.cn/daily-vue-demo/#/tree1" target="_blank" rel="noopener">在线demo🚀🐠</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://github.com/chengheai/review-demo-image/blob/master/2021-11-02%2022-01-06.2021-11-02%2022_01_56.gif?raw=true" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><blockquote><p>TreeItem.vue</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"tree-item"</span>&gt;</span><br><span class="line">    &lt;div @click=<span class="string">"handleToggle"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"tree-title"</span>&gt;</span><br><span class="line">      &lt;i v-<span class="keyword">if</span>=<span class="string">"hasChild"</span> :<span class="class"><span class="keyword">class</span></span>=<span class="string">"open?'el-icon-remove-outline':'el-icon-circle-plus-outline'"</span>&gt;&lt;<span class="regexp">/i&gt;</span></span><br><span class="line"><span class="regexp">      &lt;h4&gt;&#123;&#123; list.label &#125;&#125;&lt;/</span>h4&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div v-show='open'  class="child-content"&gt;</span></span><br><span class="line"><span class="regexp">      &lt;tree-item</span></span><br><span class="line"><span class="regexp">        v-for="(item, index) in list.children"</span></span><br><span class="line"><span class="regexp">        :list="item"</span></span><br><span class="line"><span class="regexp">        :key="index"</span></span><br><span class="line"><span class="regexp">      &gt;&lt;/</span>tree-item&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/template&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">export default &#123;</span></span><br><span class="line"><span class="regexp">  name: "TreeItem",</span></span><br><span class="line"><span class="regexp">  props: &#123;</span></span><br><span class="line"><span class="regexp">    list: &#123;</span></span><br><span class="line"><span class="regexp">      type: [Object, Array],</span></span><br><span class="line"><span class="regexp">      required: true</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">  &#125;,</span></span><br><span class="line"><span class="regexp">  data() &#123;</span></span><br><span class="line"><span class="regexp">    return &#123;</span></span><br><span class="line"><span class="regexp">      open: false</span></span><br><span class="line"><span class="regexp">    &#125;;</span></span><br><span class="line"><span class="regexp">  &#125;,</span></span><br><span class="line"><span class="regexp">  computed: &#123;</span></span><br><span class="line"><span class="regexp">    hasChild() &#123;</span></span><br><span class="line"><span class="regexp">      return this.list.children &amp;&amp; this.list.children.length;</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">  &#125;,</span></span><br><span class="line"><span class="regexp">  methods: &#123;</span></span><br><span class="line"><span class="regexp">    handleToggle() &#123;</span></span><br><span class="line"><span class="regexp">      if (this.hasChild) &#123;</span></span><br><span class="line"><span class="regexp">        this.open = !this.open;</span></span><br><span class="line"><span class="regexp">      &#125;</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;;</span></span><br><span class="line"><span class="regexp">&lt;/</span>script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=<span class="string">'less'</span> scoped&gt;</span><br><span class="line">.tree-item&#123;</span><br><span class="line">  font-size: <span class="number">20</span>px;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">  .tree-title&#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: flex-start;</span><br><span class="line">    align-items: center;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">.child-content&#123;</span><br><span class="line">  margin-left: <span class="number">50</span>px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/style&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>Tree.vue</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"tree-wrap"</span>&gt;</span><br><span class="line">    &lt;div v-<span class="keyword">for</span>=<span class="string">"(item, index) in dataSource"</span> :key=<span class="string">"index"</span>&gt;</span><br><span class="line">      &lt;tree-item :list=<span class="string">"item"</span>&gt;&lt;<span class="regexp">/tree-item&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> TreeItem <span class="keyword">from</span> <span class="string">"./TreeItem"</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  name: <span class="string">'tree'</span>,</span><br><span class="line">  props: &#123;</span><br><span class="line">    dataSource: &#123;</span><br><span class="line">      type: [<span class="built_in">Object</span>, <span class="built_in">Array</span>],</span><br><span class="line">      required: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    TreeItem</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;style scoped&gt;</span></span><br><span class="line"><span class="regexp">.tree-wrap&#123;</span></span><br><span class="line"><span class="regexp">  width: 100%;</span></span><br><span class="line"><span class="regexp">  /</span>* padding: <span class="number">0</span> <span class="number">50</span>px; *<span class="regexp">/</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">&lt;/</span>style&gt;</span><br></pre></td></tr></table></figure><blockquote><p>your component.vue</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">   &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"tree-w"</span>&gt;</span><br><span class="line">     &lt;x-tree :data-source=<span class="string">"myData"</span>&gt;&lt;<span class="regexp">/x-tree&gt;</span></span><br><span class="line"><span class="regexp">   &lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/template&gt;</span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">import xTree from './</span>Tree.vue<span class="string">'</span></span><br><span class="line"><span class="string">export default &#123;</span></span><br><span class="line"><span class="string">  name: '</span>trees<span class="string">',</span></span><br><span class="line"><span class="string">  components: &#123;</span></span><br><span class="line"><span class="string">    xTree</span></span><br><span class="line"><span class="string">  &#125;,</span></span><br><span class="line"><span class="string">  data() &#123;</span></span><br><span class="line"><span class="string">    return &#123;</span></span><br><span class="line"><span class="string">      myData: [&#123;</span></span><br><span class="line"><span class="string">        label: '</span>一级 <span class="number">1</span><span class="string">',</span></span><br><span class="line"><span class="string">        children: [&#123;</span></span><br><span class="line"><span class="string">          label: '</span>二级 <span class="number">1</span><span class="number">-1</span><span class="string">',</span></span><br><span class="line"><span class="string">          children: [&#123;</span></span><br><span class="line"><span class="string">            label: '</span>三级 <span class="number">1</span><span class="number">-1</span><span class="number">-1</span><span class="string">'</span></span><br><span class="line"><span class="string">          &#125;]</span></span><br><span class="line"><span class="string">        &#125;]</span></span><br><span class="line"><span class="string">      &#125;, &#123;</span></span><br><span class="line"><span class="string">        label: '</span>一级 <span class="number">2</span><span class="string">',</span></span><br><span class="line"><span class="string">        children: [&#123;</span></span><br><span class="line"><span class="string">          label: '</span>二级 <span class="number">2</span><span class="number">-1</span><span class="string">',</span></span><br><span class="line"><span class="string">          children: [&#123;</span></span><br><span class="line"><span class="string">            label: '</span>三级 <span class="number">2</span><span class="number">-1</span><span class="number">-1</span><span class="string">'</span></span><br><span class="line"><span class="string">          &#125;]</span></span><br><span class="line"><span class="string">        &#125;, &#123;</span></span><br><span class="line"><span class="string">          label: '</span>二级 <span class="number">2</span><span class="number">-2</span><span class="string">',</span></span><br><span class="line"><span class="string">          children: [&#123;</span></span><br><span class="line"><span class="string">            label: '</span>三级 <span class="number">2</span><span class="number">-2</span><span class="number">-1</span><span class="string">'</span></span><br><span class="line"><span class="string">          &#125;]</span></span><br><span class="line"><span class="string">        &#125;]</span></span><br><span class="line"><span class="string">      &#125;, &#123;</span></span><br><span class="line"><span class="string">        label: '</span>一级 <span class="number">3</span><span class="string">',</span></span><br><span class="line"><span class="string">        children: [&#123;</span></span><br><span class="line"><span class="string">          label: '</span>二级 <span class="number">3</span><span class="number">-1</span><span class="string">',</span></span><br><span class="line"><span class="string">          children: [&#123;</span></span><br><span class="line"><span class="string">            label: '</span>三级 <span class="number">3</span><span class="number">-1</span><span class="number">-1</span><span class="string">'</span></span><br><span class="line"><span class="string">          &#125;]</span></span><br><span class="line"><span class="string">        &#125;, &#123;</span></span><br><span class="line"><span class="string">          label: '</span>二级 <span class="number">3</span><span class="number">-2</span><span class="string">',</span></span><br><span class="line"><span class="string">          children: [&#123;</span></span><br><span class="line"><span class="string">            label: '</span>三级 <span class="number">3</span><span class="number">-2</span><span class="number">-1</span><span class="string">'</span></span><br><span class="line"><span class="string">          &#125;]</span></span><br><span class="line"><span class="string">        &#125;]</span></span><br><span class="line"><span class="string">      &#125;],</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;style&gt;</span></span><br><span class="line"><span class="string">.tree-w&#123;</span></span><br><span class="line"><span class="string">  padding: 50px;</span></span><br><span class="line"><span class="string">  padding-left: 200px;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&lt;/style&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;效果&quot;&gt;&lt;a href=&quot;#效果&quot; class=&quot;headerlink&quot; title=&quot;效果&quot;&gt;&lt;/a&gt;效果&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://blog.stack021.cn/daily-vue-demo/#/tree1&quot; target=&quot;_bla
      
    
    </summary>
    
    
      <category term="vue" scheme="https://github.com/chengheai/tags/vue/"/>
    
      <category term="tree" scheme="https://github.com/chengheai/tags/tree/"/>
    
  </entry>
  
  <entry>
    <title>nodejs服务获取微信用户openid</title>
    <link href="https://github.com/chengheai/2021/10/26/nodejs%E6%9C%8D%E5%8A%A1%E8%8E%B7%E5%8F%96%E5%BE%AE%E4%BF%A1%E7%94%A8%E6%88%B7openid/"/>
    <id>https://github.com/chengheai/2021/10/26/nodejs服务获取微信用户openid/</id>
    <published>2021-10-26T08:18:42.000Z</published>
    <updated>2021-10-26T09:30:31.242Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前端代码"><a href="#前端代码" class="headerlink" title="前端代码"></a>前端代码</h2><blockquote><p>接口发送code就可以</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"brn-wrap"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"uni-btn-v"</span> <span class="attr">v-if</span>=<span class="string">"!hasLogin"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"handleBeforeLogin"</span>&gt;</span>&#123;&#123; title &#125;&#125;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"uni-btn-v"</span> <span class="attr">v-else</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"handleTitleClick"</span>&gt;</span>&#123;&#123; title &#125;&#125;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; requestLogin &#125; <span class="keyword">from</span> <span class="string">'@/utils/str.js'</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  props: &#123;</span><br><span class="line">    title: &#123;</span><br><span class="line">      type: <span class="built_in">String</span>,</span><br><span class="line">      <span class="keyword">default</span>: <span class="string">'提交发布'</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      hasLogin: <span class="literal">false</span></span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    handleTitleClick() &#123;</span><br><span class="line">      <span class="keyword">this</span>.$emit(<span class="string">'submit'</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    handleBeforeLogin() &#123;</span><br><span class="line">      <span class="keyword">let</span> that = <span class="keyword">this</span>;</span><br><span class="line">      <span class="comment">// 推荐使用wx.getUserProfile获取用户信息，开发者每次通过该接口获取用户个人信息均需用户确认</span></span><br><span class="line">      <span class="comment">// 开发者妥善保管用户快速填写的头像昵称，避免重复弹窗</span></span><br><span class="line">      wx.getUserProfile(&#123;</span><br><span class="line">        desc: <span class="string">'用于完善用户资料'</span>, <span class="comment">// 声明获取用户个人信息后的用途，后续会展示在弹窗中，请谨慎填写</span></span><br><span class="line">        success: <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="built_in">console</span>.log(res);</span><br><span class="line">          that.doLogin(res);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    doLogin(detail) &#123;</span><br><span class="line">      <span class="keyword">const</span> self = <span class="keyword">this</span>;</span><br><span class="line">      <span class="keyword">if</span> (detail.errMsg === <span class="string">'getUserProfile:ok'</span>) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'==='</span>, detail);</span><br><span class="line">        <span class="keyword">const</span> options = wx.getLaunchOptionsSync();</span><br><span class="line">        <span class="keyword">const</span> scene = options.scene + <span class="string">''</span>;</span><br><span class="line">        <span class="keyword">if</span> (scene.startsWith(<span class="string">'CRLAND:'</span>)) &#123;</span><br><span class="line">          detail.userInfo.scene = scene.substr(<span class="number">7</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        requestLogin().then(<span class="keyword">async</span> data =&gt; &#123;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">'========'</span>, detail.userInfo);</span><br><span class="line">          <span class="keyword">const</span> obj = &#123;</span><br><span class="line">            ...detail.userInfo,</span><br><span class="line">            userInfo: detail.rawData,</span><br><span class="line">            code: data.code</span><br><span class="line">          &#125;;</span><br><span class="line">          <span class="keyword">const</span> &#123; code, result &#125; = <span class="keyword">await</span> <span class="keyword">this</span>.$api.user.login(obj);</span><br><span class="line">          <span class="keyword">if</span> (code === <span class="number">200</span>) &#123;</span><br><span class="line">            uni.setStorageSync(<span class="string">'userInfo'</span>, <span class="built_in">JSON</span>.stringify(detail.userInfo));</span><br><span class="line">            uni.setStorageSync(<span class="string">'token'</span>, result.token);</span><br><span class="line">            uni.setStorageSync(<span class="string">'userId'</span>, result.userId);</span><br><span class="line">            <span class="keyword">this</span>.hasLogin =<span class="literal">true</span>;</span><br><span class="line">            uni.switchTab(&#123;</span><br><span class="line">              url: <span class="string">'/pages/index/index'</span></span><br><span class="line">            &#125;);</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            uni.showModal(&#123;</span><br><span class="line">              title: <span class="string">'提示'</span>,</span><br><span class="line">              content: e.msg || <span class="string">'登录失败'</span>,</span><br><span class="line">              showCancel: <span class="literal">false</span>,</span><br><span class="line">              confirmText: <span class="string">'确定'</span>,</span><br><span class="line">              success: <span class="function"><span class="params">res</span> =&gt;</span> &#123;&#125;</span><br><span class="line">            &#125;);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="后端代码"><a href="#后端代码" class="headerlink" title="后端代码"></a>后端代码</h2><blockquote><p>后端只需要拿到code就可以，code不能二次使用</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>)</span><br><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">'https'</span>)</span><br><span class="line"><span class="keyword">const</span> router = express.Router()</span><br><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">'mongoose'</span>)</span><br><span class="line"><span class="keyword">const</span> qs = <span class="built_in">require</span>(<span class="string">'querystring'</span>)</span><br><span class="line"><span class="keyword">const</span> User = <span class="built_in">require</span>(<span class="string">'../models/User'</span>) <span class="comment">//引入模块模型</span></span><br><span class="line"><span class="keyword">const</span> vertoken = <span class="built_in">require</span>(<span class="string">'../utils/token'</span>) <span class="comment">//引入token</span></span><br><span class="line"><span class="keyword">const</span> wx = <span class="built_in">require</span>(<span class="string">'../config/wx'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 登录</span></span><br><span class="line">router.post(<span class="string">'/login'</span>, (_req, _res) =&gt; &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(_req.body, <span class="string">' 页面传入参数'</span>)</span><br><span class="line">  <span class="keyword">let</span> user = <span class="built_in">Object</span>.assign(&#123;&#125;, _req.body)</span><br><span class="line">  <span class="keyword">var</span> query = &#123;</span><br><span class="line">    appid: wx.appid,</span><br><span class="line">    secret: wx.secret,</span><br><span class="line">    js_code: _req.body.code,</span><br><span class="line">    grant_type: <span class="string">'authorization_code'</span>,</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> content = qs.stringify(query)</span><br><span class="line">  <span class="keyword">var</span> options = &#123;</span><br><span class="line">    hostname: <span class="string">'api.weixin.qq.com'</span>,</span><br><span class="line">    port: <span class="string">''</span>,</span><br><span class="line">    path: <span class="string">'/sns/jscode2session?'</span> + content,</span><br><span class="line">    method: <span class="string">'GET'</span>,</span><br><span class="line">    header: &#123;</span><br><span class="line">      <span class="string">'content-type'</span>: <span class="string">'application/x-www-form-urlencoded;charset=UTF-8'</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> req = http.request(options, <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">    res.on(<span class="string">'data'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">_data</span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'_data: '</span>, _data)</span><br><span class="line"></span><br><span class="line">      <span class="keyword">let</span> parsData = <span class="built_in">JSON</span>.parse(_data.toString())</span><br><span class="line">      <span class="keyword">const</span> &#123; openid &#125; = parsData</span><br><span class="line">      User.find(</span><br><span class="line">        &#123;</span><br><span class="line">          openid,</span><br><span class="line">        &#125;,</span><br><span class="line">        (err, users) =&gt; &#123;</span><br><span class="line">          <span class="keyword">if</span> (users &amp;&amp; users.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            vertoken.setToken(users[<span class="number">0</span>]._id, users[<span class="number">0</span>].openid).then(<span class="function">(<span class="params">token</span>) =&gt;</span> &#123;</span><br><span class="line">              _res.json(&#123;</span><br><span class="line">                code: <span class="number">200</span>,</span><br><span class="line">                result: &#123;</span><br><span class="line">                  token,</span><br><span class="line">                  userId:users[<span class="number">0</span>]._id</span><br><span class="line">                &#125;,</span><br><span class="line">                message: <span class="string">'登录成功'</span>,</span><br><span class="line">              &#125;)</span><br><span class="line">            &#125;)</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            user.openid = openid</span><br><span class="line">            <span class="keyword">new</span> User(user).save().then(<span class="function">(<span class="params">val</span>) =&gt;</span> &#123;</span><br><span class="line">              vertoken.setToken(val._id, openid).then(<span class="function">(<span class="params">token</span>) =&gt;</span> &#123;</span><br><span class="line">                _res.json(&#123;</span><br><span class="line">                  code: <span class="number">200</span>,</span><br><span class="line">                  result: &#123;</span><br><span class="line">                    token,</span><br><span class="line">                    userId:val._id</span><br><span class="line">                  &#125;,</span><br><span class="line">                  message: <span class="string">'登录成功'</span>,</span><br><span class="line">                &#125;)</span><br><span class="line">              &#125;)</span><br><span class="line">            &#125;)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      )</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  req.on(<span class="string">'error'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'problem with request: '</span> + e.message)</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  req.end()</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = router</span><br></pre></td></tr></table></figure><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><p><a href="https://github.com/chengheai/mini-write-messages">前端</a><br><a href="https://github.com/chengheai/mini-messages-server">node服务端</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前端代码&quot;&gt;&lt;a href=&quot;#前端代码&quot; class=&quot;headerlink&quot; title=&quot;前端代码&quot;&gt;&lt;/a&gt;前端代码&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;接口发送code就可以&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;high
      
    
    </summary>
    
    
      <category term="node" scheme="https://github.com/chengheai/tags/node/"/>
    
      <category term="小技巧" scheme="https://github.com/chengheai/tags/%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>nginxhttp转https</title>
    <link href="https://github.com/chengheai/2021/10/25/http%E8%BD%AChttps/"/>
    <id>https://github.com/chengheai/2021/10/25/http转https/</id>
    <published>2021-10-25T14:11:16.000Z</published>
    <updated>2021-10-26T09:26:35.321Z</updated>
    
    <content type="html"><![CDATA[<h2 id="域名、子域名、ssl证书"><a href="#域名、子域名、ssl证书" class="headerlink" title="域名、子域名、ssl证书"></a>域名、子域名、ssl证书</h2><blockquote><p>域名子域名的开通网上找找都有，很简单，这里主要讲证书的问题</p></blockquote><p>一个域名一个证书</p><blockquote><p>建议创建一个my_configs文件夹里面放各种项目配置xx.conf 在nginx.conf #gzip  on;下面 添加 include ./my_configs/*.conf;</p></blockquote><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">  <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">  <span class="attribute">server_name</span> demo.xxx.cn;</span><br><span class="line">  <span class="attribute">location</span> / &#123;</span><br><span class="line">    <span class="attribute">rewrite</span> (.*) https://demo.xxx.cn.cn<span class="variable">$1</span> <span class="literal">permanent</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">443</span> ssl;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">server_name</span> demo.xxx.cn.cn;</span><br><span class="line">    <span class="attribute">root</span> html;</span><br><span class="line">    <span class="attribute">index</span> index.html index.htm;</span><br><span class="line">    <span class="attribute">ssl_certificate</span> /usr/local/nginx/conf/ssl/8746281_demo.xxx.cn.cn.pem; <span class="comment"># path</span></span><br><span class="line">    <span class="attribute">ssl_certificate_key</span> /usr/local/nginx/conf/ssl/8746281_demo.xxx.cn.cn.key; <span class="comment"># path</span></span><br><span class="line">    <span class="attribute">ssl_session_timeout</span> <span class="number">5m</span>;</span><br><span class="line">    <span class="attribute">ssl_ciphers</span> ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span><br><span class="line">    <span class="attribute">ssl_protocols</span> TLSv1 TLSv1.<span class="number">1</span> TLSv1.<span class="number">2</span>;</span><br><span class="line">    <span class="attribute">ssl_prefer_server_ciphers</span> <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">       <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">       <span class="attribute">proxy_set_header</span> Host <span class="variable">$http_host</span>;</span><br><span class="line">       <span class="attribute">proxy_pass</span> http://0.0.0.0:8899;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;域名、子域名、ssl证书&quot;&gt;&lt;a href=&quot;#域名、子域名、ssl证书&quot; class=&quot;headerlink&quot; title=&quot;域名、子域名、ssl证书&quot;&gt;&lt;/a&gt;域名、子域名、ssl证书&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;域名子域名的开通网上找找都有，很简
      
    
    </summary>
    
    
      <category term="nginx" scheme="https://github.com/chengheai/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>mongoose操作数据</title>
    <link href="https://github.com/chengheai/2021/10/25/mongoose%E6%93%8D%E4%BD%9C%E6%95%B0%E6%8D%AE/"/>
    <id>https://github.com/chengheai/2021/10/25/mongoose操作数据/</id>
    <published>2021-10-25T14:10:47.000Z</published>
    <updated>2021-10-26T09:26:23.629Z</updated>
    
    <content type="html"><![CDATA[<h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><p><a href="https://mongoosejs.com/docs/guide.html" target="_blank" rel="noopener">官网英文文档</a><br><a href="http://www.mongoosejs.net/docs/guide.html" target="_blank" rel="noopener">官网中文文档</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;文档&quot;&gt;&lt;a href=&quot;#文档&quot; class=&quot;headerlink&quot; title=&quot;文档&quot;&gt;&lt;/a&gt;文档&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://mongoosejs.com/docs/guide.html&quot; target=&quot;_blank&quot; rel=&quot;
      
    
    </summary>
    
    
      <category term="mongoose" scheme="https://github.com/chengheai/tags/mongoose/"/>
    
  </entry>
  
  <entry>
    <title>node server如何实现登录生成token及接口校验token</title>
    <link href="https://github.com/chengheai/2021/10/25/server%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E7%99%BB%E5%BD%95%E7%94%9F%E6%88%90token%E5%8F%8A%E6%8E%A5%E5%8F%A3%E6%A0%A1%E9%AA%8Ctoken/"/>
    <id>https://github.com/chengheai/2021/10/25/server如何实现登录生成token及接口校验token/</id>
    <published>2021-10-25T14:10:01.000Z</published>
    <updated>2021-10-26T09:25:07.464Z</updated>
    
    <content type="html"><![CDATA[<h2 id="创建方法"><a href="#创建方法" class="headerlink" title="创建方法"></a>创建方法</h2><blockquote><p>在utils下创建一个token.js 抛出setToken，getToken方法</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> jwt = <span class="built_in">require</span>(<span class="string">"jsonwebtoken"</span>);</span><br><span class="line"><span class="keyword">var</span> jwtSecret = <span class="string">"write messages"</span>; <span class="comment">//签名</span></span><br><span class="line"><span class="comment">//登录接口 生成token的方法</span></span><br><span class="line"><span class="keyword">var</span> setToken = <span class="function"><span class="keyword">function</span>(<span class="params">_id, openid</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//expiresln 设置token过期的时间</span></span><br><span class="line">    <span class="comment">//&#123; openid: openid, _id: _id &#125; 传入需要解析的值（ 一般为用户名，用户id 等）</span></span><br><span class="line">    <span class="keyword">const</span> rule = &#123; <span class="attr">_id</span>: _id, <span class="attr">openid</span>: openid &#125;;</span><br><span class="line">    <span class="comment">// const token = 'Bearer ' + jwt.sign(rule, jwtSecret, &#123; expiresIn: '36000' &#125;);</span></span><br><span class="line">    <span class="keyword">const</span> token = jwt.sign(rule, jwtSecret, &#123;<span class="attr">expiresIn</span>: <span class="string">'7d'</span>&#125;);</span><br><span class="line">    resolve(token);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//各个接口需要验证token的方法</span></span><br><span class="line"><span class="keyword">var</span> getToken = <span class="function"><span class="keyword">function</span>(<span class="params">token</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!token) &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">"token是空的"</span>);</span><br><span class="line">      reject(&#123;</span><br><span class="line">        error: <span class="string">"token 是空的"</span></span><br><span class="line">      &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">var</span> info = jwt.verify(token, jwtSecret);</span><br><span class="line">      <span class="comment">// console.log('info: ', info);</span></span><br><span class="line">      resolve(info); <span class="comment">//解析返回的值（sign 传入的值）</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  setToken,</span><br><span class="line">  getToken</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>)</span><br><span class="line"><span class="keyword">var</span> router = express.Router()</span><br><span class="line"><span class="keyword">const</span> Like = <span class="built_in">require</span>(<span class="string">'../models/Like'</span>) <span class="comment">//引入模块模型</span></span><br><span class="line"><span class="keyword">var</span> vertoken = <span class="built_in">require</span>(<span class="string">'../utils/token'</span>) <span class="comment">//引入token</span></span><br><span class="line"><span class="comment">// 个人点赞列表</span></span><br><span class="line">router.get(<span class="string">'/article/like/list'</span>, (req, res) =&gt; &#123;</span><br><span class="line">  vertoken</span><br><span class="line">    .getToken(req.headers.token)</span><br><span class="line">    .then(<span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">      Like.find(&#123;</span><br><span class="line">        userId: data._id,</span><br><span class="line">      &#125;)</span><br><span class="line">        .then(<span class="function">(<span class="params">likes</span>) =&gt;</span> &#123;</span><br><span class="line">          res.json(&#123;</span><br><span class="line">            code: <span class="number">200</span>,</span><br><span class="line">            result: &#123;</span><br><span class="line">              data: likes,</span><br><span class="line">            &#125;,</span><br><span class="line">            message: <span class="string">'请求成功！'</span>,</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">'err:'</span>, err)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch(<span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'error:'</span>, error)</span><br><span class="line">      res.json(&#123; <span class="attr">code</span>: <span class="number">401</span>, <span class="attr">message</span>: <span class="string">'token失效了'</span> &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><p><a href="https://github.com/chengheai/mini-write-messages">前端</a><br><a href="https://github.com/chengheai/mini-messages-server">node服务端</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;创建方法&quot;&gt;&lt;a href=&quot;#创建方法&quot; class=&quot;headerlink&quot; title=&quot;创建方法&quot;&gt;&lt;/a&gt;创建方法&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;在utils下创建一个token.js 抛出setToken，getToken方法&lt;/p&gt;
&lt;/b
      
    
    </summary>
    
    
      <category term="token" scheme="https://github.com/chengheai/tags/token/"/>
    
  </entry>
  
  <entry>
    <title>如何使用multer实现文件上传及回显</title>
    <link href="https://github.com/chengheai/2021/10/25/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8multer%E5%AE%9E%E7%8E%B0%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%8F%8A%E5%9B%9E%E6%98%BE/"/>
    <id>https://github.com/chengheai/2021/10/25/如何使用multer实现文件上传及回显/</id>
    <published>2021-10-25T14:09:39.000Z</published>
    <updated>2021-10-26T09:29:06.128Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前端代码"><a href="#前端代码" class="headerlink" title="前端代码"></a>前端代码</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"img-list"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">v-for</span>=<span class="string">"(i, index) in form.imgs"</span> <span class="attr">:key</span>=<span class="string">"index"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"item-img mr20"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">image</span> <span class="attr">:src</span>=<span class="string">"RES_ROOT + i"</span> <span class="attr">mode</span>=<span class="string">"aspectFit"</span> @<span class="attr">click.native.stop</span>=<span class="string">"preImg(RES_ROOT + i)"</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">uni-icons</span> <span class="attr">type</span>=<span class="string">"close"</span> <span class="attr">color</span>=<span class="string">"#606266"</span> <span class="attr">size</span>=<span class="string">"20"</span> <span class="attr">class</span>=<span class="string">"del-btn"</span> @<span class="attr">click</span>=<span class="string">"handleDel(index, i)"</span>&gt;</span><span class="tag">&lt;/<span class="name">uni-icons</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">v-if</span>=<span class="string">"form.imgs.length &lt; 2"</span> <span class="attr">class</span>=<span class="string">"uni-hello-addfile f-c-c-c"</span> @<span class="attr">click</span>=<span class="string">"handleChooseImage"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uni-icons</span> <span class="attr">type</span>=<span class="string">"plusempty"</span> <span class="attr">color</span>=<span class="string">"#606266"</span> <span class="attr">size</span>=<span class="string">"24"</span> <span class="attr">class</span>=<span class="string">"mb12"</span>&gt;</span><span class="tag">&lt;/<span class="name">uni-icons</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text</span>&gt;</span>选择图片<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 删除</span></span><br><span class="line">handleDel(index, row) &#123;</span><br><span class="line">  <span class="keyword">this</span>.form.imgs.splice(index, <span class="number">1</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(index, row);</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// 预览</span></span><br><span class="line">preImg(logourl) &#123;</span><br><span class="line">  <span class="keyword">let</span> imgsArray = [];</span><br><span class="line">  imgsArray[<span class="number">0</span>] = logourl;</span><br><span class="line">  uni.previewImage(&#123;</span><br><span class="line">    current: <span class="number">0</span>,</span><br><span class="line">    urls: imgsArray</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// 上传</span></span><br><span class="line">handleChooseImage() &#123;</span><br><span class="line">  <span class="keyword">let</span> that = <span class="keyword">this</span>;</span><br><span class="line">  uni.chooseImage(&#123;</span><br><span class="line">    count: <span class="number">2</span>,</span><br><span class="line">    sourceType: [<span class="string">'album'</span>, <span class="string">'camera'</span>],</span><br><span class="line">    success: <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'chooseImage success, temp path is'</span>, res.tempFilePaths[<span class="number">0</span>]);</span><br><span class="line">      <span class="keyword">var</span> imageSrc = res.tempFilePaths[<span class="number">0</span>];</span><br><span class="line">      uni.uploadFile(&#123;</span><br><span class="line">        url: <span class="string">`<span class="subst">$&#123;BASE_URL&#125;</span>/api/file/upload`</span>,</span><br><span class="line">        filePath: imageSrc,</span><br><span class="line">        fileType: <span class="string">'image'</span>,</span><br><span class="line">        formData: &#123;</span><br><span class="line">          prefix: that.$dayjs().format(<span class="string">'YYYYMMDD'</span>)</span><br><span class="line">        &#125;,</span><br><span class="line">        name: <span class="string">'file'</span>,</span><br><span class="line">        success: <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">'uploadImage success, res is:'</span>, res);</span><br><span class="line">          <span class="keyword">const</span> &#123; code, result &#125; = <span class="built_in">JSON</span>.parse(res.data);</span><br><span class="line">          <span class="keyword">if</span> (code === <span class="number">200</span>) &#123;</span><br><span class="line">            uni.showToast(&#123;</span><br><span class="line">              title: <span class="string">'图片上传成功'</span>,</span><br><span class="line">              duration: <span class="number">1000</span></span><br><span class="line">            &#125;);</span><br><span class="line">            that.form.imgs.push(result);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        fail: <span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">'uploadImage fail'</span>, err);</span><br><span class="line">          uni.showModal(&#123;</span><br><span class="line">            content: err.errMsg,</span><br><span class="line">            showCancel: <span class="literal">false</span></span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    fail: <span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'chooseImage fail'</span>, err);</span><br><span class="line">      <span class="comment">// #ifdef MP</span></span><br><span class="line">      uni.getSetting(&#123;</span><br><span class="line">        success: <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">let</span> authStatus = res.authSetting[<span class="string">'scope.album'</span>];</span><br><span class="line">          <span class="keyword">if</span> (!authStatus) &#123;</span><br><span class="line">            uni.showModal(&#123;</span><br><span class="line">              title: <span class="string">'授权失败'</span>,</span><br><span class="line">              content: <span class="string">'写寄语需要从您的相册获取图片，请在设置界面打开相关权限'</span>,</span><br><span class="line">              success: <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (res.confirm) &#123;</span><br><span class="line">                  uni.openSetting();</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="comment">// #endif</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="后端代码"><a href="#后端代码" class="headerlink" title="后端代码"></a>后端代码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>)</span><br><span class="line"><span class="keyword">var</span> router = express.Router()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 图片上传</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> multer = <span class="built_in">require</span>(<span class="string">'multer'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// const upload = multer(&#123; dest: '/home/assets' &#125;)</span></span><br><span class="line"><span class="keyword">var</span> storage = multer.diskStorage(&#123;</span><br><span class="line">  destination: <span class="function"><span class="keyword">function</span> (<span class="params">req, file, cb</span>) </span>&#123;</span><br><span class="line">    cb(<span class="literal">null</span>, <span class="string">'/home/assets'</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  filename: <span class="function"><span class="keyword">function</span> (<span class="params">req, file, cb</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; prefix &#125; = req.body</span><br><span class="line">    <span class="comment">// let type = file.originalname.replace(/.+\./, '.')</span></span><br><span class="line">    cb(<span class="literal">null</span>, <span class="string">`<span class="subst">$&#123;prefix&#125;</span><span class="subst">$&#123;file.originalname&#125;</span>`</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> upload = multer(&#123; <span class="attr">storage</span>: storage &#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 前端文件上传</span></span><br><span class="line">router.post(<span class="string">'/file/upload'</span>, upload.array(<span class="string">'file'</span>, <span class="number">10</span>), <span class="function"><span class="keyword">function</span> (<span class="params">req, res, next</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'file:'</span>, req.files)</span><br><span class="line">  <span class="keyword">const</span> &#123; prefix &#125; = req.body</span><br><span class="line">  <span class="comment">// 获取文件名</span></span><br><span class="line">  <span class="keyword">let</span> name = req.files[<span class="number">0</span>].originalname</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> imgUrl = <span class="string">`/<span class="subst">$&#123;prefix&#125;</span><span class="subst">$&#123;name&#125;</span>`</span></span><br><span class="line">  res.json(&#123;</span><br><span class="line">    code: <span class="number">200</span>,</span><br><span class="line">    result: imgUrl,</span><br><span class="line">    message: <span class="string">'上传成功'</span>,</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = router</span><br></pre></td></tr></table></figure><h2 id="预览地址"><a href="#预览地址" class="headerlink" title="预览地址"></a>预览地址</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip + port + /home/assets/xxx.png</span><br></pre></td></tr></table></figure><h2 id="nginx-配置"><a href="#nginx-配置" class="headerlink" title="nginx 配置"></a>nginx 配置</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">  <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">  <span class="attribute">server_name</span> static.xxx.com;</span><br><span class="line">  <span class="attribute">location</span> / &#123;</span><br><span class="line">    <span class="attribute">root</span> /home/assets;</span><br><span class="line">    <span class="attribute">index</span> index.html index.html;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">443</span> ssl;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">server_name</span> static.xxx.com;</span><br><span class="line">    <span class="attribute">root</span> html;</span><br><span class="line">    <span class="attribute">index</span> index.html index.htm;</span><br><span class="line">    <span class="attribute">ssl_certificate</span> /usr/local/nginx/conf/ssl/691837_static.xxx.com.pem;</span><br><span class="line">    <span class="attribute">ssl_certificate_key</span> /usr/local/nginx/conf/ssl/691837_static.xxx.com.key;</span><br><span class="line">    <span class="attribute">ssl_session_timeout</span> <span class="number">5m</span>;</span><br><span class="line">    <span class="attribute">ssl_ciphers</span> ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span><br><span class="line">    <span class="attribute">ssl_protocols</span> TLSv1 TLSv1.<span class="number">1</span> TLSv1.<span class="number">2</span>;</span><br><span class="line">    <span class="attribute">ssl_prefer_server_ciphers</span> <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">root</span> /home/assets;</span><br><span class="line">        <span class="attribute">index</span> index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><p><a href="https://github.com/chengheai/mini-write-messages">前端</a><br><a href="https://github.com/chengheai/mini-messages-server">node服务端</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前端代码&quot;&gt;&lt;a href=&quot;#前端代码&quot; class=&quot;headerlink&quot; title=&quot;前端代码&quot;&gt;&lt;/a&gt;前端代码&lt;/h2&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre
      
    
    </summary>
    
    
      <category term="node" scheme="https://github.com/chengheai/tags/node/"/>
    
      <category term="uni-app" scheme="https://github.com/chengheai/tags/uni-app/"/>
    
  </entry>
  
  <entry>
    <title>node+mongodb+vue实现一个写寄语小程序</title>
    <link href="https://github.com/chengheai/2021/10/25/node-mongodb-vue%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E5%86%99%E5%AF%84%E8%AF%AD%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    <id>https://github.com/chengheai/2021/10/25/node-mongodb-vue实现一个写寄语小程序/</id>
    <published>2021-10-25T13:44:06.000Z</published>
    <updated>2021-10-26T09:31:35.582Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>近期利用十一的时候写了一个小程序，把node、mongodb、nginx、vue的知识点复习了一遍，从开发到上线流程梳理了一遍，下面是一些涉及到的易错步骤<br>1、<a href="https://blog.stack021.cn/2021/10/25/如何使用multer实现文件上传及回显/" target="_blank" rel="noopener">如何使用multer实现文件上传及回显</a><br>2、<a href="https://blog.stack021.cn/2021/10/25/server如何实现登录生成token及接口校验token/" target="_blank" rel="noopener">node server如何实现登录生成token及接口校验token</a><br>3、<a href="https://blog.stack021.cn/2021/10/25/mongoose操作数据/" target="_blank" rel="noopener">mongoose操作数据</a><br>4、<a href="https://blog.stack021.cn/2021/10/25/server如何实现登录生成token及接口校验token/" target="_blank" rel="noopener">centos7 安装mongodb、pm2等</a><br>5、<a href="https://blog.stack021.cn/2021/10/25/http转https/" target="_blank" rel="noopener">nginx http转https</a><br>6、<a href="https://blog.stack021.cn//2021/10/26/nodejs服务获取微信用户openid/" target="_blank" rel="noopener">nodejs服务获取微信用户openid</a></p><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><p><a href="https://github.com/chengheai/mini-write-messages">前端</a><br><a href="https://github.com/chengheai/mini-messages-server">node服务端</a></p><h2 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h2><p><img src="https://github.com/chengheai/review-demo-image/blob/master/mini.jpg?raw=true" alt="小程序码" width="300" height="300" align="center"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;近期利用十一的时候写了一个小程序，把node、mongodb、nginx、vue的知识点复习了一遍，从开发到上线流程梳理了一遍，下面是一些涉
      
    
    </summary>
    
    
      <category term="vue" scheme="https://github.com/chengheai/tags/vue/"/>
    
      <category term="mongodb" scheme="https://github.com/chengheai/tags/mongodb/"/>
    
      <category term="node" scheme="https://github.com/chengheai/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>深入理解js中防抖跟截流的区别</title>
    <link href="https://github.com/chengheai/2021/07/15/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3js%E4%B8%AD%E9%98%B2%E6%8A%96%E8%B7%9F%E6%88%AA%E6%B5%81%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>https://github.com/chengheai/2021/07/15/深入理解js中防抖跟截流的区别/</id>
    <published>2021-07-15T13:29:55.000Z</published>
    <updated>2021-10-20T14:10:38.984Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在日常项目开发中，通常会碰到监听处理的操作，比如监听浏览器窗口大小改变，监听滚动事件，监听输入事件等等，然而做这方面功能的时候就要想着怎么优化性能，防抖跟截流就派上用场了</p><h2 id="防抖"><a href="#防抖" class="headerlink" title="防抖"></a>防抖</h2><blockquote><p>触发高频事件后delay内函数只会执行一次，如果delay内高频事件再次被触发，则重新计算时间</p></blockquote><ol><li>实现方式：每次触发事件时设置一个延迟调用方法，并且取消之前的延时调用方法</li><li>缺点：如果事件在规定的时间间隔内被不断的触发，则调用方法会被不断的延迟</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//debounce</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">debounce</span>(<span class="params">method, delay</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> timer = <span class="literal">null</span></span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> self = <span class="keyword">this</span></span><br><span class="line">    <span class="keyword">if</span> (timer) &#123;</span><br><span class="line">      clearTimeout(timer)</span><br><span class="line">      timer = <span class="literal">null</span></span><br><span class="line">    &#125;</span><br><span class="line">    timer = setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      method.apply(self, <span class="built_in">arguments</span>)</span><br><span class="line">    &#125;, delay)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">handle</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(xxx);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 滚动事件</span></span><br><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">'scroll'</span>, debounce(handle,<span class="number">1000</span>));</span><br></pre></td></tr></table></figure><h1 id="节流"><a href="#节流" class="headerlink" title="节流"></a>节流</h1><blockquote><p>指在规定时间内只触发一次事件，减少事件执行的频率</p></blockquote><ol><li>实现方式：每次触发事件时，如果当前有等待执行的延时函数，则直接return</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">throttle</span>(<span class="params">fn,delay</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> canRun = <span class="literal">true</span></span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> self = <span class="keyword">this</span></span><br><span class="line">    <span class="keyword">if</span> (!canRun) <span class="keyword">return</span></span><br><span class="line">    canRun = <span class="literal">false</span></span><br><span class="line">    setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      fn.apply(self, <span class="built_in">arguments</span>)</span><br><span class="line">      canRun = <span class="literal">true</span></span><br><span class="line">    &#125;, delay)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="其他版本"><a href="#其他版本" class="headerlink" title="其他版本"></a>其他版本</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 时间戳</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">throttle1</span> (<span class="params">fn, delay</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> prev = <span class="built_in">Date</span>.now()</span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> now = <span class="built_in">Date</span>.now()</span><br><span class="line">    <span class="keyword">if</span> (now - prev &gt;= delay) &#123;</span><br><span class="line">      fn()</span><br><span class="line">      prev = <span class="built_in">Date</span>.now()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定时器</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">throttle2</span> (<span class="params">fn, delay</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> timer = <span class="literal">null</span></span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!timer) &#123;</span><br><span class="line">      timer = setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        fn()</span><br><span class="line">        timer = <span class="literal">null</span></span><br><span class="line">      &#125;, delay)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h1><p><a href="https://chengheai.github.io/daily-vue-demo/#/throttle" target="_blank" rel="noopener">throttle 截流</a><br><a href="https://chengheai.github.io/daily-vue-demo/#/debounce" target="_blank" rel="noopener">debounce 防抖</a></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>一般情况下onresize，onkeyup事件使用防抖；onscroll、onmousemove等事件使用截流。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在日常项目开发中，通常会碰到监听处理的操作，比如监听浏览器窗口大小改变，监听滚动事件，监听输入事件等等，然而做这方面功能的时候就要想着怎么优
      
    
    </summary>
    
    
      <category term="Javascript" scheme="https://github.com/chengheai/tags/Javascript/"/>
    
  </entry>
  
  <entry>
    <title>jenkins+docker+github+nginx前端实现自动化部署</title>
    <link href="https://github.com/chengheai/2020/07/06/jenkins-docker-github-nginx%E5%89%8D%E7%AB%AF%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/"/>
    <id>https://github.com/chengheai/2020/07/06/jenkins-docker-github-nginx前端实现自动化部署/</id>
    <published>2020-07-06T14:08:22.000Z</published>
    <updated>2021-10-20T14:10:38.965Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>由于之前写过react+nodejs+mongodb的项目，只是在本地开发完成，想尝试正常开发部署上线流出走一波，然而在网上搜索一番，大部分都是写的基础东西，标题大内容小，有的甚至写到关键位置就没了，当然也有些是好文章，下面是我总结一些问题，踩过坑之后的流程</p><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ul><li>虚拟机一台，市面上的有VirtualBox【mac】，VMware【windows】系统为linux，笔者为linux CentOS7.6<h2 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h2></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 看你当前的内核版本</span></span><br><span class="line">uname -r</span><br><span class="line"></span><br><span class="line"><span class="comment">// yum 包更新到最新</span></span><br><span class="line">yum update -y</span><br><span class="line"></span><br><span class="line"><span class="comment">// 安装 docker</span></span><br><span class="line">yum install docker</span><br><span class="line"></span><br><span class="line"><span class="comment">// 启动并加入开机启动</span></span><br><span class="line">systemctl start docker</span><br><span class="line">systemctl enable docker</span><br><span class="line"></span><br><span class="line"><span class="comment">// 下载docker-compose</span></span><br><span class="line">curl -L https:<span class="comment">//github.com/docker/compose/releases/download/1.23.2/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-compose</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加可执行权限(这里不懂可以看一下菜鸟教程-linux教程-文件权限)</span></span><br><span class="line">chmod +x /usr/local/bin/docker-compose</span><br><span class="line"><span class="comment">// 查看docker-compose版本</span></span><br><span class="line">docker-compose --version</span><br></pre></td></tr></table></figure><h2 id="Jenkins-安装与配置"><a href="#Jenkins-安装与配置" class="headerlink" title="Jenkins 安装与配置"></a>Jenkins 安装与配置</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker search jenkins</span><br></pre></td></tr></table></figure><p>选择第二个或者第三个，第一个有坑</p><h3 id="安装jenkins"><a href="#安装jenkins" class="headerlink" title="安装jenkins"></a>安装jenkins</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -u <span class="number">0</span> --privileged --name jenkins -p <span class="number">8888</span>:<span class="number">8080</span> -v /root/jenkins_home:<span class="regexp">/var/</span>jenkins_home jenkins/jenkins</span><br></pre></td></tr></table></figure><p>注意⚠️：本机需要在/root下创建一个jenkins_home文件夹【没有就加，有就要加】<br>其中:<br>-d 指的是在后台运行；<br>-u 0 指的是传入 root 账号 ID，覆盖容器中内置的账号；<br>-v /root/jenkins_home:/var/jenkins_home 指的是将 docker 容器内的目录 /var/jenkins_home 映射到宿主机 /root/jenkins_home 目录上；<br>–name jenkins 指的是将 docker 容器内的目录 /var/jenkins_home 映射到宿主机 /root/jenkins_home 目录上；<br>-p 49003:8080 指的是将容器的 8080 端口映射到宿主机的 8888 端口；<br>–privileged 指的是赋予最高权限。</p><p>整条命令的意思就是：<br>运行一个镜像为 jenkins/jenkins:latest 的容器，命名为 jenkins_home，使用 root 账号覆盖容器中的账号，赋予最高权限，将容器的 /var/jenkins_home 映射到宿主机的 /root/jenkins_home 目录下，映射容器中 8080 端口到宿主机 49003 端口</p><p>执行完成后，等待几十秒，等待 Jenkins 容器启动初始化。到浏览器中输入 <a href="http://your" target="_blank" rel="noopener">http://your</a> ip:49003 查看 Jenkins 是否启动成功</p><p>看到如下界面说明启动成功：</p><p>通过如下命令获取密码，复制到上图输入框中</p><p>进入到下个页面，选择【安装推荐的插件】。</p><p>由于墙的问题，需要修改 Jenkins 的默认下载地址。可以在浏览器另起一个 tab 页面，进入 <a href="http://your" target="_blank" rel="noopener">http://your</a> ip:49003/pluginManager/advanced，修改最下面的升级站点 URL 为 <a href="http://mirror.esuni.jp/jenkins/updates/update-center.json" target="_blank" rel="noopener">http://mirror.esuni.jp/jenkins/updates/update-center.json</a></p><p>然后重启容器，再次进入初始化页面，通常下载速度会加快。</p><p>然后就是创建管理员账号。</p><p>进入首页后，因为自动化部署中需要通过 ssh 登陆服务器执行命令以及 node 环境，所以需要下载 Publish Over SSH 和 NodeJS 插件，可通过系统管理 -&gt; 管理插件 -&gt; 可选插件进入，搜索选中并直接安装。如下图所示：</p><p>需要注意的是，Publish Over SSH 需要配置相关 ssh 服务器，通过系统管理 -&gt; 系统设置 进入并拉到最下面，输入 Name、Hostname、Username、Passphrase / Password 等参数。如下图所示：</p><p>然后点击 Test Configuration 校验能否登陆。</p><p>至此 Jenkins 已经完成了全局配置。</p><p>关联 Jenkins 和 Github<br>在 GitHub 创建一个项目，以本项目为例，在项目根目录下创建 nginx.conf 和 docker-compose.yml 文件</p><p>nginx.conf<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#user  nobody;</span></span><br><span class="line">worker_processes 1;</span><br><span class="line"></span><br><span class="line"><span class="comment">#error_log  logs/error.log;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  notice;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  info;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#pid        logs/nginx.pid;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">  worker_connections 1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">  include mime.types;</span><br><span class="line">  default_type application/octet-stream;</span><br><span class="line"></span><br><span class="line">  <span class="comment">#log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '</span></span><br><span class="line">  <span class="comment">#                  '$status $body_bytes_sent "$http_referer" '</span></span><br><span class="line">  <span class="comment">#                  '"$http_user_agent" "$http_x_forwarded_for"';</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#access_log  logs/access.log  main;</span></span><br><span class="line"></span><br><span class="line">  sendfile on;</span><br><span class="line">  <span class="comment">#tcp_nopush     on;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#keepalive_timeout  0;</span></span><br><span class="line">  keepalive_timeout 65;</span><br><span class="line"></span><br><span class="line">  <span class="comment">#gzip  on;</span></span><br><span class="line"></span><br><span class="line">  server &#123;</span><br><span class="line">    listen 10000;</span><br><span class="line">    server_name 192.168.56.101;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#charset koi8-r;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#access_log  logs/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">      index index.html index.htm;</span><br><span class="line">      root /usr/share/nginx/html;</span><br><span class="line">      <span class="comment"># 所有静态资源均指向 /index.html</span></span><br><span class="line">      try_files <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.html;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#error_page  404              /404.html;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># redirect server error pages to the static page /50x.html</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    error_page 500 502 503 504 /50x.html;</span><br><span class="line">    location = /50x.html &#123;</span><br><span class="line">      root  /usr/share/nginx/html;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># location /api &#123;</span></span><br><span class="line">    <span class="comment">#   proxy_pass http://server:port;</span></span><br><span class="line">    <span class="comment"># &#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># proxy the PHP scripts to Apache listening on 127.0.0.1:80</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">    <span class="comment">#    proxy_pass   http://127.0.0.1;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">    <span class="comment">#    root           html;</span></span><br><span class="line">    <span class="comment">#    fastcgi_pass   127.0.0.1:9000;</span></span><br><span class="line">    <span class="comment">#    fastcgi_index  index.php;</span></span><br><span class="line">    <span class="comment">#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span></span><br><span class="line">    <span class="comment">#    include        fastcgi_params;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># deny access to .htaccess files, if Apache's document root</span></span><br><span class="line">    <span class="comment"># concurs with nginx's one</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#location ~ /\.ht &#123;</span></span><br><span class="line">    <span class="comment">#    deny  all;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>docker-compose.yml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">'3'</span></span><br><span class="line">services:</span><br><span class="line">  ad-tpl-vue: <span class="comment">#项目name</span></span><br><span class="line">    container_name: <span class="string">'webhtml'</span> <span class="comment">#容器名称</span></span><br><span class="line">    image: nginx</span><br><span class="line">    restart: always</span><br><span class="line">    ports:</span><br><span class="line">      - 10000:10000</span><br><span class="line">    volumes:</span><br><span class="line">      - ./nginx.conf:/etc/nginx/nginx.conf <span class="comment">#挂载nginx配置</span></span><br><span class="line">      - ./dist:/usr/share/nginx/html/ <span class="comment">#挂载项目</span></span><br><span class="line">    privileged: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>这里需要解释下 volumes 参数，在打包 Docker 镜像时，如果将 nginx.conf 和 dist 直接拷贝到镜像中，那么每次修改相关文件时，都需要重新打包新的镜像。通过 volumes 可以将宿主机的某个文件映射到容器的某个文件，那么改动相关文件，就不要重新打包镜像了，只需修改宿主机上的文件即可。</p><p>然后在 Jenkins 创建一个新的任务，选择【构建一个自由风格的软件项目】，并设置相关配置，如下图所示。</p><p>其中第三张图两部分命令含义如下：</p><p>第一部分 shell 命令是 build 前端项目，会在项目根目录下生成 dist 目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$PATH</span></span><br><span class="line">node -v</span><br><span class="line">npm -v</span><br><span class="line">npm install</span><br><span class="line">npm run build</span><br></pre></td></tr></table></figure><p>第二部分 shell 命令就是通过 ssh 登陆服务器，通过 docker-compose 进行构建 docker 镜像并运行容器。相较于直接使用 docker ，当更新代码时无需执行停止删除容器，重新构建新的镜像等操作。<br>cd /root/jenkins_home/workspace/ad-tpl-vue \<br>&amp;&amp; docker-compose stop &amp;&amp; docker-compose up -d</p><p>最后可以回到该任务页，点击【立即构建】来构建我们的项目了。<br>实现自动触发打包<br>不过仍有个问题，那就是当向 GitHub 远程仓库 push 代码时，需要能够自动触发构建，相关操作如下。<br>1.修改 Jenkins 安全策略</p><p>通过系统管理 -&gt; 全局安全配置 进入，并如下图操作</p><p>2.生成 Jenkins API Token</p><p>通过用户列表 -&gt; 点击管理员用户 -&gt; 设置，点击添加新 token，然后复制身份验证令牌 token</p><p>3.在 Jenkins 项目对应任务的设置中配置【构建触发器】，将刚复制的 token 粘贴进去，如下图所示：</p><p>4.在 Github 相关项目中打开 Setting -&gt; Webhooks -&gt; Add webhooks，输入格式如下的 URL :<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 前面是 Jenkins 服务地址，ad-tpl-vue 指在 Jenkins 的任务名称，Token指上面获取的令牌</span></span><br><span class="line">http:<span class="comment">//12x.xxx.xxx.xxx:xxxx/job/ad-tpl-vue/build?token=Token</span></span><br></pre></td></tr></table></figure></p><p>这样，我们就实现了在 push 新的代码后，自动触发 Jenkins 打包项目代码，并打包 docker 镜像然后运行。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;由于之前写过react+nodejs+mongodb的项目，只是在本地开发完成，想尝试正常开发部署上线流出走一波，然而在网上搜索一番，大部分
      
    
    </summary>
    
    
      <category term="nginx" scheme="https://github.com/chengheai/tags/nginx/"/>
    
      <category term="docker" scheme="https://github.com/chengheai/tags/docker/"/>
    
      <category term="jenkins" scheme="https://github.com/chengheai/tags/jenkins/"/>
    
  </entry>
  
  <entry>
    <title>el-date-picker daterange设置上下7天选择区间</title>
    <link href="https://github.com/chengheai/2020/06/11/daterange%E8%AE%BE%E7%BD%AE%E4%B8%8A%E4%B8%8B7%E5%A4%A9%E9%80%89%E6%8B%A9%E5%8C%BA%E9%97%B4/"/>
    <id>https://github.com/chengheai/2020/06/11/daterange设置上下7天选择区间/</id>
    <published>2020-06-11T06:18:25.000Z</published>
    <updated>2021-10-20T14:10:38.963Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>时间选择区间想个不能超过 7 天</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">"搜索时间:"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-date-picker</span></span></span><br><span class="line"><span class="tag"><span class="attr">v-model</span>=<span class="string">"form.rangeDate"</span></span></span><br><span class="line"><span class="tag"><span class="attr">value-format</span>=<span class="string">"yyyy-MM-dd"</span></span></span><br><span class="line"><span class="tag"><span class="attr">type</span>=<span class="string">"daterange"</span></span></span><br><span class="line"><span class="tag"><span class="attr">:picker-options</span>=<span class="string">"pickerOptions"</span></span></span><br><span class="line"><span class="tag"><span class="attr">clearable</span></span></span><br><span class="line"><span class="tag">@<span class="attr">change</span>=<span class="string">"handleFormChange"</span></span></span><br><span class="line"><span class="tag">/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">data()&#123;</span><br><span class="line">  <span class="keyword">let</span> that = <span class="keyword">this</span> <span class="comment">// 关键</span></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    pickerOptions: &#123;</span><br><span class="line">      disabledDate(time) &#123;</span><br><span class="line">        <span class="keyword">let</span> timeOptionRange = that.timeOptionRange</span><br><span class="line">        <span class="keyword">let</span> secondNum = <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span> * <span class="number">7</span> * <span class="number">1000</span></span><br><span class="line">        <span class="keyword">if</span> (timeOptionRange) &#123;</span><br><span class="line">          <span class="keyword">return</span> time.getTime() &gt; timeOptionRange.getTime() + secondNum || time.getTime() &lt; timeOptionRange.getTime() - secondNum</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;, onPick(time) &#123;</span><br><span class="line">        <span class="comment">// 当第一时间选中才设置禁用</span></span><br><span class="line">        <span class="keyword">if</span> (time.minDate &amp;&amp; !time.maxDate) &#123;</span><br><span class="line">          that.timeOptionRange = time.minDate</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (time.maxDate) &#123;</span><br><span class="line">          that.timeOptionRange = <span class="literal">null</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;需求&quot;&gt;&lt;a href=&quot;#需求&quot; class=&quot;headerlink&quot; title=&quot;需求&quot;&gt;&lt;/a&gt;需求&lt;/h2&gt;&lt;p&gt;时间选择区间想个不能超过 7 天&lt;/p&gt;
&lt;h2 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
    
      <category term="element-ui" scheme="https://github.com/chengheai/tags/element-ui/"/>
    
  </entry>
  
  <entry>
    <title>解决vue中移动端ios键盘收起页面不归位问题</title>
    <link href="https://github.com/chengheai/2020/03/24/%E8%A7%A3%E5%86%B3vue%E4%B8%AD%E7%A7%BB%E5%8A%A8%E7%AB%AFios%E9%94%AE%E7%9B%98%E6%94%B6%E8%B5%B7%E9%A1%B5%E9%9D%A2%E4%B8%8D%E5%BD%92%E4%BD%8D%E9%97%AE%E9%A2%98/"/>
    <id>https://github.com/chengheai/2020/03/24/解决vue中移动端ios键盘收起页面不归位问题/</id>
    <published>2020-03-24T12:36:07.000Z</published>
    <updated>2021-10-20T14:10:38.986Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>网上找的例子<br>千篇一律～～～～～<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://github.com/chengheai/review-demo-image/blob/master/WX20200324-204643@2x.png?raw=true" alt title>                </div>                <div class="image-caption"></div>            </figure></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> @<span class="attr">focusout</span>=<span class="string">"inputBlur"</span> @<span class="attr">focusin</span>=<span class="string">"inputFocus"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"tel"</span> <span class="attr">placeholder</span>=<span class="string">"请输入手机号"</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">placeholder</span>=<span class="string">"请输入验证码"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line">    data() &#123;</span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">        timer: <span class="literal">null</span>,</span></span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">      inputBlur(e) &#123;</span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (e &amp;&amp; e.target &amp;&amp; e.target.tagName &amp;&amp; e.target.tagName.toLowerCase() === <span class="string">'input'</span>) &#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">this</span>.timer = setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">window</span>.scrollTo(<span class="number">0</span>, <span class="number">0</span>);</span></span><br><span class="line">          &#125;, 0);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      inputFocus(e) &#123;</span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (e &amp;&amp; e.target &amp;&amp; e.target.tagName &amp;&amp; e.target.tagName.toLowerCase() === <span class="string">'input'</span>) &#123;</span></span><br><span class="line"><span class="javascript">          clearTimeout(<span class="keyword">this</span>.timer);</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">"scss"</span> <span class="attr">scoped</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;网上找的例子&lt;br&gt;千篇一律～～～～～&lt;br&gt;&lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;
      
    
    </summary>
    
    
      <category term="vue" scheme="https://github.com/chengheai/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>el-time-picker自定义选择大于当前时间限制</title>
    <link href="https://github.com/chengheai/2020/03/11/el-time-picker%E8%87%AA%E5%AE%9A%E4%B9%89%E9%80%89%E6%8B%A9%E5%A4%A7%E4%BA%8E%E5%BD%93%E5%89%8D%E6%97%B6%E9%97%B4%E9%99%90%E5%88%B6/"/>
    <id>https://github.com/chengheai/2020/03/11/el-time-picker自定义选择大于当前时间限制/</id>
    <published>2020-03-11T13:02:59.000Z</published>
    <updated>2021-10-20T14:10:38.964Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>something think</p><h2 id="DEMO"><a href="#DEMO" class="headerlink" title="DEMO"></a>DEMO</h2><p><a href="https://chengheai.github.io/daily-vue-demo/#/date-picker" target="_blank" rel="noopener">在线 demo🎱🤓👀</a></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-form</span></span></span><br><span class="line"><span class="tag">    <span class="attr">:model</span>=<span class="string">"ruleForm"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">:rules</span>=<span class="string">"rules"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">ref</span>=<span class="string">"ruleForm"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">label-width</span>=<span class="string">"150px"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">class</span>=<span class="string">"demo-ruleForm"</span></span></span><br><span class="line"><span class="tag">  &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">"大于当前时间"</span> <span class="attr">prop</span>=<span class="string">"mytime"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-date-picker</span></span></span><br><span class="line"><span class="tag">        <span class="attr">type</span>=<span class="string">"datetime"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">placeholder</span>=<span class="string">"选择日期"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">value-format</span>=<span class="string">"timestamp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">:picker-options</span>=<span class="string">"pickerOptions"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">v-model</span>=<span class="string">"ruleForm.mytime"</span></span></span><br><span class="line"><span class="tag">      &gt;</span><span class="tag">&lt;/<span class="name">el-date-picker</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"primary"</span> @<span class="attr">click</span>=<span class="string">"submitForm('ruleForm')"</span>&gt;</span>立即创建<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">"resetForm('ruleForm')"</span>&gt;</span>重置<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">      <span class="keyword">var</span> validateTime = <span class="function">(<span class="params">rule, value, callback</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (value &lt;= <span class="built_in">Date</span>.now()) &#123;</span><br><span class="line">          callback(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'选择时间必须大于当前时间'</span>));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          callback();</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;;</span><br><span class="line">      <span class="keyword">return</span> &#123;</span><br><span class="line">        pickerOptions: &#123;</span><br><span class="line">          <span class="comment">// 限制收货时间不让选择今天以前的</span></span><br><span class="line">          disabledDate(time) &#123;</span><br><span class="line">            <span class="keyword">return</span> time.getTime() &lt; <span class="built_in">Date</span>.now() - <span class="number">8.64e7</span>;</span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        ruleForm: &#123;</span><br><span class="line">          mytime: <span class="string">''</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        rules: &#123;</span><br><span class="line">          mytime: [</span><br><span class="line">            &#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">'请选择时间'</span>, <span class="attr">trigger</span>: <span class="string">'change'</span> &#125;,</span><br><span class="line">            &#123; <span class="attr">validator</span>: validateTime, <span class="attr">trigger</span>: <span class="string">'blur'</span> &#125;,</span><br><span class="line">          ],</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">      submitForm(formName) &#123;</span><br><span class="line">        <span class="keyword">this</span>.$refs[formName].validate(<span class="function"><span class="params">valid</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (valid) &#123;</span><br><span class="line">            alert(<span class="string">'submit!'</span>);</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'error submit!!'</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;,</span><br><span class="line">      resetForm(formName) &#123;</span><br><span class="line">        <span class="keyword">this</span>.$refs[formName].resetFields();</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;something think&lt;/p&gt;
&lt;h2 id=&quot;DEMO&quot;&gt;&lt;a href=&quot;#DEMO&quot; class=&quot;headerlink&quot; t
      
    
    </summary>
    
    
      <category term="element-ui" scheme="https://github.com/chengheai/tags/element-ui/"/>
    
  </entry>
  
  <entry>
    <title>原生js实现redux中getState,subscribe,listener,dispatch函数</title>
    <link href="https://github.com/chengheai/2020/03/01/%E5%8E%9F%E7%94%9Fjs%E5%AE%9E%E7%8E%B0redux%E4%B8%ADgetState-subscribe-listener-dispatch%E5%87%BD%E6%95%B0/"/>
    <id>https://github.com/chengheai/2020/03/01/原生js实现redux中getState-subscribe-listener-dispatch函数/</id>
    <published>2020-03-01T12:05:52.000Z</published>
    <updated>2021-10-20T14:10:38.981Z</updated>
    
    <content type="html"><![CDATA[<h2 id="原生代码"><a href="#原生代码" class="headerlink" title="原生代码"></a>原生代码</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 原生js实现dispatch 函数 --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"title"</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"content"</span>&gt;</span>内容<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> render = <span class="function"><span class="keyword">function</span>(<span class="params">state</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">'title'</span>).innerHTML = state.title;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">'content'</span>).innerHTML = state.content;</span></span><br><span class="line">      &#125;;</span><br><span class="line"><span class="javascript">      <span class="comment">// 自定义一个dispatch过程</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> appReducer = <span class="function"><span class="keyword">function</span>(<span class="params">state, action</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 返回默认的state</span></span></span><br><span class="line">        if (!state) &#123;</span><br><span class="line"><span class="javascript">          <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">            title: <span class="string">'初始化title'</span>,</span></span><br><span class="line"><span class="javascript">            content: <span class="string">'初始化content'</span>,</span></span><br><span class="line">          &#125;;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="comment">//返回相应的state</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">switch</span> (action.type) &#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">case</span> <span class="string">'CHANGE_TITLE'</span>:</span></span><br><span class="line"><span class="javascript">            <span class="comment">// state修改</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line">              ...state,</span><br><span class="line">              title: action.newTitle,</span><br><span class="line">            &#125;;</span><br><span class="line"><span class="javascript">          <span class="keyword">default</span>:</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> state;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;;</span><br><span class="line"><span class="javascript">      <span class="comment">// 希望调用createStore就返回一个store</span></span></span><br><span class="line"><span class="javascript">      <span class="comment">// 纯函数 传入什么返回什么</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> createStore = <span class="function"><span class="keyword">function</span>(<span class="params">reducer</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> state = <span class="literal">null</span>;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 监听者们</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> listeners = [];</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> dispatch = <span class="function"><span class="keyword">function</span>(<span class="params">action</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="comment">//</span></span></span><br><span class="line"><span class="javascript">          state = reducer(state, action); <span class="comment">// reducer返回新的state</span></span></span><br><span class="line"><span class="javascript">          listeners.forEach(<span class="function"><span class="params">listener</span> =&gt;</span> listener());</span></span><br><span class="line">        &#125;;</span><br><span class="line">        dispatch(&#123;&#125;);</span><br><span class="line"><span class="javascript">        getState = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">return</span> state;</span></span><br><span class="line">        &#125;;</span><br><span class="line"><span class="javascript">        <span class="comment">// 订阅</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> subscribe = <span class="function"><span class="keyword">function</span>(<span class="params">listener</span>) </span>&#123;</span></span><br><span class="line">          listeners.push(listener);</span><br><span class="line">        &#125;;</span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> &#123;</span></span><br><span class="line">          subscribe,</span><br><span class="line">          dispatch,</span><br><span class="line">          getState,</span><br><span class="line">        &#125;;</span><br><span class="line">      &#125;;</span><br><span class="line"><span class="javascript">      <span class="comment">// store 包含subscribe,dispatch,getState</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> store = createStore(appReducer);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">      store.subscribe(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line">        render(store.getState());</span><br><span class="line">      &#125;);</span><br><span class="line"><span class="javascript">      store.subscribe(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(store.getState());</span></span><br><span class="line">      &#125;);</span><br><span class="line">      store.dispatch(&#123;</span><br><span class="line"><span class="javascript">        type: <span class="string">'CHANGE_TITLE'</span>,</span></span><br><span class="line"><span class="javascript">        newTitle: <span class="string">'this is new title'</span>,</span></span><br><span class="line">      &#125;);</span><br><span class="line">      render(store.getState());</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;原生代码&quot;&gt;&lt;a href=&quot;#原生代码&quot; class=&quot;headerlink&quot; title=&quot;原生代码&quot;&gt;&lt;/a&gt;原生代码&lt;/h2&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre
      
    
    </summary>
    
    
      <category term="redux" scheme="https://github.com/chengheai/tags/redux/"/>
    
  </entry>
  
  <entry>
    <title>js原生方法实现react开发模式与组件化包装</title>
    <link href="https://github.com/chengheai/2020/02/25/js%E5%8E%9F%E7%94%9F%E6%96%B9%E6%B3%95%E5%AE%9E%E7%8E%B0react%E5%BC%80%E5%8F%91%E6%A8%A1%E5%BC%8F%E4%B8%8E%E7%BB%84%E4%BB%B6%E5%8C%96%E5%8C%85%E8%A3%85/"/>
    <id>https://github.com/chengheai/2020/02/25/js原生方法实现react开发模式与组件化包装/</id>
    <published>2020-02-25T14:04:02.000Z</published>
    <updated>2021-10-20T14:10:38.966Z</updated>
    
    <content type="html"><![CDATA[<h2 id="react-原生开发模式"><a href="#react-原生开发模式" class="headerlink" title="react 原生开发模式"></a>react 原生开发模式</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 更加接近react的开发模式 --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> root = <span class="built_in">document</span>.getElementById(<span class="string">'root'</span>);</span></span><br><span class="line"><span class="javascript">      <span class="comment">// 状态</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> state = &#123;</span></span><br><span class="line"><span class="javascript">        like: <span class="literal">false</span>,</span></span><br><span class="line">      &#125;;</span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> setState = <span class="function"><span class="keyword">function</span>(<span class="params">newState</span>) </span>&#123;</span></span><br><span class="line">        state = &#123;</span><br><span class="line">          ...state,</span><br><span class="line">          ...newState,</span><br><span class="line">        &#125;;</span><br><span class="line">        render();</span><br><span class="line">      &#125;;</span><br><span class="line"><span class="javascript">      <span class="comment">// 渲染</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> render = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line">        root.innerHTML = `</span><br><span class="line"><span class="javascript">      &lt;button type=<span class="string">'button'</span> style=<span class="string">'color:$&#123;state.like ? '</span>red<span class="string">' : '</span>black<span class="string">'&#125;'</span> onclick=<span class="string">'handleClick()'</span>&gt;</span></span><br><span class="line"><span class="javascript">      $&#123;state.like ? <span class="string">'已赞'</span> : <span class="string">'喜欢'</span>&#125;</span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">      `;</span><br><span class="line">      &#125;;</span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> handleClick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line">        setState(&#123;</span><br><span class="line">          like: !state.like,</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;;</span><br><span class="line">      render();</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="组件化包装"><a href="#组件化包装" class="headerlink" title="组件化包装"></a>组件化包装</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 组件化包装 --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> root = <span class="built_in">document</span>.getElementById(<span class="string">'root'</span>);</span></span><br><span class="line"><span class="javascript">      <span class="comment">// 提取setState方法</span></span></span><br><span class="line"><span class="javascript">      <span class="class"><span class="keyword">class</span> <span class="title">Component</span> </span>&#123;</span></span><br><span class="line">        setState(newState) &#123;</span><br><span class="line"><span class="javascript">          <span class="keyword">this</span>.state = &#123;</span></span><br><span class="line">            ...this.state,</span><br><span class="line">            ...newState,</span><br><span class="line">          &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="javascript">      <span class="comment">// extends 继承组件Component的setState方法 + super()</span></span></span><br><span class="line"><span class="javascript">      <span class="class"><span class="keyword">class</span> <span class="title">Button</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">constructor</span>() &#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">super</span>();</span></span><br><span class="line"><span class="javascript">          <span class="keyword">this</span>.state = &#123;</span></span><br><span class="line"><span class="javascript">            like: <span class="literal">true</span>,</span></span><br><span class="line">          &#125;;</span><br><span class="line"><span class="javascript">          <span class="keyword">this</span>.render();</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="comment">// setState(newState) &#123;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//   this.state = &#123;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//     ...this.state,</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//     newState</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//   &#125;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//   this.render()</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// &#125;</span></span></span><br><span class="line">        render() &#123;</span><br><span class="line"><span class="javascript">          <span class="keyword">const</span> state = <span class="keyword">this</span>.state;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">return</span> <span class="string">`</span></span></span><br><span class="line"><span class="javascript">           &lt;button type=<span class="string">'button'</span> style=<span class="string">'color:$&#123;state.like ? '</span>red<span class="string">' : '</span>black<span class="string">'&#125;'</span>&gt;</span></span><br><span class="line"><span class="javascript">      $&#123;state.like ? <span class="string">'已赞'</span> : <span class="string">'喜欢'</span>&#125;</span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">        `;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="javascript">      <span class="comment">// extends 继承组件Component的setState方法 + super()</span></span></span><br><span class="line"><span class="javascript">      <span class="class"><span class="keyword">class</span> <span class="title">Title</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">constructor</span>() &#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">super</span>();</span></span><br><span class="line"><span class="javascript">          <span class="keyword">this</span>.state = &#123;</span></span><br><span class="line"><span class="javascript">            text: <span class="string">'这是一个标题'</span>,</span></span><br><span class="line">          &#125;;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="comment">// setState(newState) &#123;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//   this.state = &#123;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//     ...this.state,</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//     newState</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//   &#125;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// &#125;</span></span></span><br><span class="line">        render() &#123;</span><br><span class="line"><span class="javascript">          <span class="keyword">return</span> <span class="string">`&lt;h1&gt;<span class="subst">$&#123;<span class="keyword">this</span>.state.text&#125;</span>&lt;/h1&gt;`</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="javascript">      <span class="comment">// 组件复用</span></span></span><br><span class="line"><span class="javascript">      <span class="class"><span class="keyword">class</span> <span class="title">Wrap</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">constructor</span>() &#123;&#125;</span></span><br><span class="line">        render() &#123;</span><br><span class="line"><span class="javascript">          <span class="keyword">return</span> <span class="string">`Wrap <span class="subst">$&#123;<span class="keyword">new</span> Title().render()&#125;</span> <span class="subst">$&#123;<span class="keyword">new</span> Button().render()&#125;</span>`</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="javascript">      root.innerHTML = <span class="keyword">new</span> Wrap().render();</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;react-原生开发模式&quot;&gt;&lt;a href=&quot;#react-原生开发模式&quot; class=&quot;headerlink&quot; title=&quot;react 原生开发模式&quot;&gt;&lt;/a&gt;react 原生开发模式&lt;/h2&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;t
      
    
    </summary>
    
    
      <category term="react" scheme="https://github.com/chengheai/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>nodejs中常见的跨域处理</title>
    <link href="https://github.com/chengheai/2020/02/23/nodejs%E4%B8%AD%E5%B8%B8%E8%A7%81%E7%9A%84%E8%B7%A8%E5%9F%9F%E5%A4%84%E7%90%86/"/>
    <id>https://github.com/chengheai/2020/02/23/nodejs中常见的跨域处理/</id>
    <published>2020-02-23T13:29:53.000Z</published>
    <updated>2021-10-20T14:10:38.966Z</updated>
    
    <content type="html"><![CDATA[<h2 id="跨域问题"><a href="#跨域问题" class="headerlink" title="跨域问题"></a>跨域问题</h2><p>ajax 同源策略 协议 主机(ip,域名) 端口号</p><ol><li>协议，端口</li><li>cors</li><li>header 头文件信息</li><li>jsonp</li><li>服务器</li></ol><h2 id="解决-🧍‍♀️"><a href="#解决-🧍‍♀️" class="headerlink" title="解决 🧍‍♀️"></a>解决 🧍‍♀️</h2><blockquote><p>协议，端口</p></blockquote><p>将跨域的文件放入与服务器一样的文件下</p><blockquote><p>cors</p></blockquote><p>以 express 为例</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">const</span> cors = <span class="built_in">require</span>(<span class="string">'cors'</span>);</span><br><span class="line">...</span><br><span class="line">your codes...</span><br><span class="line">...</span><br><span class="line">app.use(cors());</span><br></pre></td></tr></table></figure><blockquote><p>header 头文件信息</p></blockquote><p>以 express 为例</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line">...</span><br><span class="line">your codes...</span><br><span class="line">...</span><br><span class="line">app.all(<span class="string">'*'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res, next</span>) </span>&#123;</span><br><span class="line">    res.header(<span class="string">"Access-Control-Allow-Origin"</span>, <span class="string">"*"</span>);</span><br><span class="line">    res.header(<span class="string">"Access-Control-Allow-Headers"</span>, <span class="string">"X-Requested-With,Content-Type"</span>);</span><br><span class="line">    res.header(<span class="string">"Access-Control-Allow-Methods"</span>,<span class="string">"PUT,POST,GET,DELETE,OPTIONS"</span>);</span><br><span class="line">    next();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><blockquote><p>jsonp</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">JSONP.getJSON(<span class="string">'http://api.com'</span>, data, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(data);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><blockquote><p>服务器</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">const</span> request = <span class="built_in">require</span>(<span class="string">'request'</span>);</span><br><span class="line">...</span><br><span class="line">your codes...</span><br><span class="line">...</span><br><span class="line"><span class="comment">// 本地api接口</span></span><br><span class="line">app.get(<span class="string">'/cors'</span>, (req, res) =&gt; &#123;</span><br><span class="line">  <span class="comment">// 发送一个服务器请求</span></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'cors.html的ajax'</span>);</span><br><span class="line">  <span class="comment">// 目标服务器，你想请求的服务器api</span></span><br><span class="line">  request(<span class="string">'http://www.google.com/xx/api/v1'</span>, (err, response, body) =&gt; &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(body);</span><br><span class="line">    <span class="keyword">if</span> (!err) &#123;</span><br><span class="line">      res.send(body);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(err);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;跨域问题&quot;&gt;&lt;a href=&quot;#跨域问题&quot; class=&quot;headerlink&quot; title=&quot;跨域问题&quot;&gt;&lt;/a&gt;跨域问题&lt;/h2&gt;&lt;p&gt;ajax 同源策略 协议 主机(ip,域名) 端口号&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;协议，端口&lt;/li&gt;
&lt;li&gt;cors&lt;/l
      
    
    </summary>
    
    
      <category term="nodejs" scheme="https://github.com/chengheai/tags/nodejs/"/>
    
      <category term="跨域" scheme="https://github.com/chengheai/tags/%E8%B7%A8%E5%9F%9F/"/>
    
  </entry>
  
  <entry>
    <title>小程序中优雅的获取手机号</title>
    <link href="https://github.com/chengheai/2020/01/08/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E4%BC%98%E9%9B%85%E7%9A%84%E8%8E%B7%E5%8F%96%E6%89%8B%E6%9C%BA%E5%8F%B7/"/>
    <id>https://github.com/chengheai/2020/01/08/小程序中优雅的获取手机号/</id>
    <published>2020-01-08T13:33:09.000Z</published>
    <updated>2021-10-20T14:10:38.982Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近在写小程序项目，有个获取手机号功能，网上荡了一下，虽不说是代码问题，有些文章都是残缺不全的，说到容易错误的区域又并未使用代码避免，说而不做的问题，索性自己结合网上的文章及官网文档写了一套完整的代码，完全开箱即用 🏄🏻‍♂️🏮🎹🐸</p><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://github.com/chengheai/review-demo-image/blob/master/WX20200108-214825@2x.png?raw=true" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Page Object</span></span><br><span class="line">Page(&#123;</span><br><span class="line">  data: &#123;&#125;,</span><br><span class="line">  getPhoneNumber: <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> that = <span class="keyword">this</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'e'</span>, e);</span><br><span class="line">    <span class="comment">//-----------------是否授权，授权通过进入主页面，授权拒绝则停留在登录界面</span></span><br><span class="line">    <span class="keyword">if</span> (e.detail.errMsg == <span class="string">'getPhoneNumber:fail user deny'</span>) &#123;</span><br><span class="line">      <span class="comment">//用户点击拒绝</span></span><br><span class="line">      wx.showModal(&#123;</span><br><span class="line">        content: <span class="string">'请输入手机号'</span>,</span><br><span class="line">        showCancel: <span class="literal">false</span>,</span><br><span class="line">        success(res) &#123;</span><br><span class="line">          <span class="keyword">if</span> (res.confirm) &#123;</span><br><span class="line">            <span class="comment">// your code ...</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> phoneQuery = &#123;</span><br><span class="line">        encryptedData: e.detail.encryptedData,</span><br><span class="line">        iv: e.detail.iv,</span><br><span class="line">        <span class="comment">// other params...</span></span><br><span class="line">        openid: wx.getStorageSync(<span class="string">'openid'</span>),</span><br><span class="line">      &#125;;</span><br><span class="line">      <span class="comment">// 检查是session_key否过期</span></span><br><span class="line">      wx.checkSession(&#123;</span><br><span class="line">        success() &#123;</span><br><span class="line">          <span class="comment">//session_key 未过期，并且在本生命周期一直有效</span></span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">'session_key 未过期，并且在本生命周期一直有效'</span>);</span><br><span class="line">          wx.request(&#123;</span><br><span class="line">            url: <span class="string">'https://xxx.com/api/v1/xx'</span>,</span><br><span class="line">            method: <span class="string">'POST'</span>,</span><br><span class="line">            data: phoneQuery,</span><br><span class="line">            success: <span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line">              <span class="comment">// your code...</span></span><br><span class="line">            &#125;,</span><br><span class="line">            fail: <span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123;</span><br><span class="line">              <span class="comment">// your code...</span></span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;,</span><br><span class="line">        fail() &#123;</span><br><span class="line">          that.myLogin();</span><br><span class="line">          <span class="comment">// session_key 已经失效，需要重新执行登录流程</span></span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// login</span></span><br><span class="line">  myLogin() &#123;</span><br><span class="line">    wx.login(&#123;</span><br><span class="line">      success: <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">//用code传给服务器调换session_key</span></span><br><span class="line">        <span class="keyword">let</span> query = &#123;</span><br><span class="line">          code: res.code,</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">// my_login为wx.request(&#123;&#125;)封装</span></span><br><span class="line">        my_login(query).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="comment">// other code...</span></span><br><span class="line">          wx.setStorageSync(<span class="string">'unionid'</span>, unionid);</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//options(Object)</span></span><br><span class="line">  onLoad: <span class="function"><span class="keyword">function</span>(<span class="params">options</span>) </span>&#123;&#125;,</span><br><span class="line">  onReady: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;,</span><br><span class="line">  onShow: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;,</span><br><span class="line">  onHide: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;,</span><br><span class="line">  onUnload: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;,</span><br><span class="line">  onPullDownRefresh: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;,</span><br><span class="line">  onReachBottom: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;,</span><br><span class="line">  onShareAppMessage: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;,</span><br><span class="line">  onPageScroll: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;,</span><br><span class="line">  <span class="comment">//item(index,pagePath,text)</span></span><br><span class="line">  onTabItemTap: <span class="function"><span class="keyword">function</span>(<span class="params">item</span>) </span>&#123;&#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近在写小程序项目，有个获取手机号功能，网上荡了一下，虽不说是代码问题，有些文章都是残缺不全的，说到容易错误的区域又并未使用代码避免，说而不
      
    
    </summary>
    
    
      <category term="小程序" scheme="https://github.com/chengheai/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>怎么使用docker运行nuxt项目</title>
    <link href="https://github.com/chengheai/2020/01/07/%E6%80%8E%E4%B9%88%E4%BD%BF%E7%94%A8docker%E8%BF%90%E8%A1%8Cnuxt%E9%A1%B9%E7%9B%AE/"/>
    <id>https://github.com/chengheai/2020/01/07/怎么使用docker运行nuxt项目/</id>
    <published>2020-01-07T13:18:36.000Z</published>
    <updated>2021-10-20T14:10:38.983Z</updated>
    
    <content type="html"><![CDATA[<h2 id="个人日常-DEMO"><a href="#个人日常-DEMO" class="headerlink" title="个人日常 DEMO"></a>个人日常 DEMO</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@github.com:chengheai/ssr-project.git</span><br></pre></td></tr></table></figure><h2 id="添加-Dockerfile"><a href="#添加-Dockerfile" class="headerlink" title="添加 Dockerfile"></a>添加 Dockerfile</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">touch Dockerfile</span><br><span class="line">vi Dockerfile</span><br><span class="line">FROM node:<span class="number">8.11</span><span class="number">.0</span></span><br><span class="line"></span><br><span class="line">WORKDIR /opt</span><br><span class="line">ADD node_modules /opt/node_modules</span><br><span class="line">ADD server /opt/server</span><br><span class="line">ADD .nuxt /opt/.nuxt</span><br><span class="line">ADD <span class="keyword">static</span> /opt/<span class="keyword">static</span></span><br><span class="line">ADD nuxt.config.js /opt</span><br><span class="line">ADD package.json /opt</span><br><span class="line">EXPOSE <span class="number">3000</span></span><br><span class="line">CMD [<span class="string">"npm"</span>, <span class="string">"run"</span>, <span class="string">"start"</span>]</span><br></pre></td></tr></table></figure><p>~FROM node:8.11.0：该 image 文件继承官方的 node image，冒号表示标签，这里标签是 8.11.0，即 8.11.0 版本的 node。<br>~ADD . /opt：将当前目录文件下的所有文件（除了.dockerignore 排除的路径），都拷贝进入 image 文件的/opt 目录。<br>~WORKDIR /opt：指定接下来的工作路径为/opt。<br>~RUN npm install 或者 ADD node_modules：在/opt 目录下，运行 npm install 命令安装依赖。注意，安装后所有的依赖，都将打包进入 image 文件。<br>~EXPOSE 3000: 3000 端口暴露出来， 允许外部连接这个端口。</p><h2 id="添加-dockerignore"><a href="#添加-dockerignore" class="headerlink" title="添加.dockerignore"></a>添加.dockerignore</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">touch .dockerignore</span><br><span class="line">vi .dockerignore</span><br><span class="line">  .git</span><br><span class="line">  <span class="comment"># node_modules</span></span><br><span class="line">  npm-debug.log</span><br></pre></td></tr></table></figure><h2 id="build"><a href="#build" class="headerlink" title="build"></a>build</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker image build -t ssr-project.</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">docker image build -t ssr-project:0.0.1 .</span><br><span class="line"><span class="comment"># 最后面的空格和点不要漏</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://github.com/chengheai/review-demo-image/blob/master/WechatIMG370.png?raw=true" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="start"><a href="#start" class="headerlink" title="start"></a>start</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -d --name ssr-server -p 3000:3000 <span class="built_in">test</span>-ssr</span><br><span class="line">ssr-server: 容器名称</span><br><span class="line"><span class="built_in">test</span>-ssr: 镜像</span><br><span class="line">关闭</span><br><span class="line">$ docker stop ssr-server</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">okcer image ls // 查看 image</span><br><span class="line">docker image build -t ssr-project.  // 常见image</span><br><span class="line">docker rmi [containerID] // 删除指定镜像</span><br><span class="line">docker run -it --rm -p 3000:3000 ssr-project // docker container run命令会从 image 文件生成容器。--rm参数，在容器终止运行后自动删除容器文件</span><br><span class="line">docker ps // 列出本机正在运行的容器</span><br><span class="line">docker ps -a  // 列出本机所有容器，包括终止运行的容器</span><br><span class="line">docker container ls // 列出本机正在运行的容器</span><br><span class="line">docker container ls --all // 列出本机所有容器，包括终止运行的容器</span><br><span class="line">docker container rm [containerID] // 删除指定容器</span><br><span class="line">docker container <span class="built_in">kill</span> [containerID] // 终止容器运行，相当于向容器里面的主进程发出 SIGKILL 信号</span><br><span class="line">docker container stop [containerID] // 终止容器运行，相当于向容器里面的主进程发出 SIGTERM 信号，然后过一段时间再发出 SIGKILL 信号</span><br><span class="line">docker container start [containerID] // 启动已经生成、已经停止运行的容器</span><br><span class="line">docker container logs [containerID] // 用来查看 docker 容器的输出，即容器里面 Shell 的标准输出</span><br><span class="line">docker container <span class="built_in">exec</span> -it [containerID] /bin/bash // 用于进入一个正在运行的 docker 容器 进入容器就可以在容器的 Shell 执行命令了</span><br><span class="line">docker container cp [containID]:[/path/to/file] . // 用于从正在运行的 Docker 容器里面，将文件拷贝到本机</span><br></pre></td></tr></table></figure><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><p><a href="https://www.cnblogs.com/DeepInThought/p/10896790.html" target="_blank" rel="noopener">docker 常用指令说明</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;个人日常-DEMO&quot;&gt;&lt;a href=&quot;#个人日常-DEMO&quot; class=&quot;headerlink&quot; title=&quot;个人日常 DEMO&quot;&gt;&lt;/a&gt;个人日常 DEMO&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td
      
    
    </summary>
    
    
      <category term="docker" scheme="https://github.com/chengheai/tags/docker/"/>
    
  </entry>
  
</feed>
